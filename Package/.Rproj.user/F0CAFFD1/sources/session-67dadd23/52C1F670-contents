library(tidyverse)
library(RSQLite)
library(data.table)
# load predictdb

# filename <- "Paper_PrediXcan/Data/V8_ElasticNetModel/mashr_Breast_Mammary_Tissue.db"
# sqlite.driver <- dbDriver("SQLite")
# ElasticNet <- dbConnect(sqlite.driver,
#                         dbname = filename)
# dbListTables(ElasticNet)
# ENextra <- dbReadTable(ElasticNet,"extra")
# ENweights <- dbReadTable(ElasticNet,"weights")
# ENweights[1:3,]
# gene=unique(ENweights$gene)
# oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv") %>% 
#   filter(study == "WAABCS") %>% 
#   pull(subject_index)
# gene_location <- rep(NA, length(gene))
# for (i in 1:length(gene)){
#   yName <- gene[i]
#   SubDat=ENweights[which(ENweights$gene==yName), ]
#   gene_location[i] <- str_sub(SubDat$varID,1,5) %>% unique
#   print(i)
# }
# 
# tibble(index = 1:length(gene),
#        gene = gene,
#        location = gene_location
#        ) %>% 
#   write_csv("Paper_PrediXcan/Results/gene_location.csv")
ensembl38 <-
  read_csv("Paper_PrediXcan/Data/ensembl38.txt") %>% 
  janitor::clean_names() %>% 
  select(gene = gene_stable_id, gene_name) %>% unique
gene_name_table <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  mutate(gene = str_sub(gene, 1,15)) %>% 
  # pull(gene) %>% unique %>% length
  left_join(ensembl38) %>% 
  rename(gene_index = index) %>% 
  mutate(gene_index = as.numeric(gene_index))
gene_name_table %>% 
  filter(gene_name == "PRR33")
gene_name_table %>% 
  filter(gene_name == "HSF2")

gene_name_table %>% 
  filter(gene_name == "HSF2")

result_ZNF703_PredictDB <- ENweights[which(str_sub(ENweights$gene,1,15) =="ENSG00000183779"), ]
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
result_ZNF703_miXcan <- result_1_6461_epi[[6013]]$Beta1 
result_1_6461_epi[[5021]]$ft.sym$beta.all.models
result_1_6461_epi[[5021]]$Beta1
result_1_6461_epi[[5021]]$Beta2
# save(result_ZNF703_PredictDB, result_ZNF703_miXcan, file = "Paper_PrediXcan/Rdata/result_SNP_weight_ZNF703.Rdata")
beta1_all <- NULL
beta2_all <- NULL
for (i in 1:6461){
  beta1_all <- rbind(result_1_6461_epi[[i]]$Beta1, beta1_all)
  beta2_all <- rbind(result_1_6461_epi[[i]]$Beta2, beta2_all)
  print(i)
}


ensembl38 %>% 
  right_join(beta1_all %>% 
               as_tibble() %>% 
               mutate(gene = str_sub(gene,1,15)) %>%
               select(gene, varID, miXcan_Epithelial = weight) %>% 
               inner_join(beta2_all %>% 
                            as_tibble() %>% 
                            mutate(gene = str_sub(gene,1,15)) %>%
                            select(gene, varID, miXcan_non_Epithelial = weight)) %>% 
               inner_join(beta1_all %>% 
                            as_tibble() %>% 
                            mutate(gene = str_sub(gene,1,15)) %>%
                            select(gene, varID, PrediXcan = EN)) %>% 
               drop_na() %>% 
               rename(gene_stable_id = gene)) %>% 
  # filter(is.na( gene_name )) %>% 
  # pull(1) %>% unique
  drop_na() %>% 
  write_tsv("Paper_PrediXcan/Results/weight_MiXcan_PrediXcan.tsv")







result_TMEM245_PredictDB <- ENweights[which(str_sub(ENweights$gene,1,15) =="ENSG00000106771"), ]
# load("../Rdata/GTEx_result_1_6461_epi.Rdata")
result_TMEM245_miXcan <- result_1_6461_epi[[6297]]$Beta1 
save(result_TMEM245_PredictDB, result_TMEM245_miXcan, 
     file = "Paper_PrediXcan/Rdata/result_SNP_weight_TMEM245.Rdata")


gene_name_table %>% 
  filter(gene_name %in% c("TMEM245", "STXBP4", "SRGAP2C", "CASP8","RCCD1", "ALS2CR12")) 
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr15.Rdata")
gene_name_table %>% 
  filter(location == "chr15") %>% 
  mutate(id = 1:n()) %>% 
  filter(gene_name == "RCCD1")
tibble("MiXcan (Epithelial)" = yhat_cell_1_all[,161],
       "MiXcan (Non-Epithelial)" = yhat_cell_2_all[,161],
       PrediXcan = yhat_cell_1_en_all[,161]) %>% 
  mutate(gene = "RCCD1") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1.csv")



load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr17.Rdata")
gene_selected_id <- gene_name_table %>% 
  filter(location == "chr17") %>% 
  mutate(id = 1:n()) %>% 
  filter(gene_name == "STXBP4") %>% 
  pull(id)
tibble("MiXcan (Epithelial)" = yhat_cell_1_all[,gene_selected_id],
       "MiXcan (Non-Epithelial)" = yhat_cell_2_all[,gene_selected_id],
       PrediXcan = yhat_cell_1_en_all[,gene_selected_id]) %>% 
  mutate(gene = "STXBP4") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4.csv")

load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr01.Rdata")
gene_selected_id <- gene_name_table %>% 
  filter(location == "chr1_") %>% 
  mutate(id = 1:n()) %>% 
  filter(gene_name == "SRGAP2C") %>% 
  pull(id)
tibble("MiXcan (Epithelial)" = yhat_cell_1_all[,gene_selected_id],
       "MiXcan (Non-Epithelial)" = yhat_cell_2_all[,gene_selected_id],
       PrediXcan = yhat_cell_1_en_all[,gene_selected_id]) %>% 
  mutate(gene = "SRGAP2C") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C.csv")

load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr02.Rdata")
gene_selected_id <- gene_name_table %>% 
  filter(location == "chr2_") %>% 
  mutate(id = 1:n()) %>% 
  filter(gene_name == "CASP8") %>% 
  pull(id)
tibble("MiXcan (Epithelial)" = yhat_cell_1_all[,gene_selected_id],
       "MiXcan (Non-Epithelial)" = yhat_cell_2_all[,gene_selected_id],
       PrediXcan = yhat_cell_1_en_all[,gene_selected_id]) %>% 
  mutate(gene = "CASP8") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8.csv")

# load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr02.Rdata")
gene_selected_id <- gene_name_table %>% 
  filter(location == "chr2_") %>% 
  mutate(id = 1:n()) %>% 
  filter(gene_name == "ALS2CR12") %>% 
  pull(id)
tibble("MiXcan (Epithelial)" = yhat_cell_1_all[,gene_selected_id],
       "MiXcan (Non-Epithelial)" = yhat_cell_2_all[,gene_selected_id],
       PrediXcan = yhat_cell_1_en_all[,gene_selected_id]) %>% 
  mutate(gene = "ALS2CR12") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12.csv")

load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr09.Rdata")
gene_selected_id <- gene_name_table %>% 
  filter(location == "chr9_") %>% 
  mutate(id = 1:n()) %>% 
  filter(gene_name == "TMEM245") %>% 
  pull(id)
tibble("MiXcan (Epithelial)" = yhat_cell_1_all[,gene_selected_id],
       "MiXcan (Non-Epithelial)" = yhat_cell_2_all[,gene_selected_id],
       PrediXcan = yhat_cell_1_en_all[,gene_selected_id]) %>% 
  mutate(gene = "TMEM245") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245.csv")

load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr19.Rdata")
gene_selected_id <- gene_name_table %>% 
  filter(location == "chr19") %>% 
  mutate(id = 1:n()) %>% 
  filter(gene_name == "DNAAF3") %>% 
  pull(id)
tibble("MiXcan (Epithelial)" = yhat_cell_1_all[,gene_selected_id],
       "MiXcan (Non-Epithelial)" = yhat_cell_2_all[,gene_selected_id],
       PrediXcan = yhat_cell_1_en_all[,gene_selected_id]) %>% 
  mutate(gene = "DNAAF3") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3.csv")

load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr06.Rdata")
gene_selected_id <- gene_name_table %>% 
  filter(location == "chr6_") %>% 
  mutate(id = 1:n()) %>% 
  filter(gene_name == "HSF2") %>% 
  pull(id)
tibble("MiXcan (Epithelial)" = yhat_cell_1_all[,gene_selected_id],
       "MiXcan (Non-Epithelial)" = yhat_cell_2_all[,gene_selected_id],
       PrediXcan = yhat_cell_1_en_all[,gene_selected_id]) %>% 
  mutate(gene = "HSF2") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2.csv")


read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245.csv") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12.csv")) %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8.csv")) %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C.csv")) %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4.csv")) %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1.csv")) %>% 
  mutate(gene = factor(gene, levels = c("TMEM245", "ALS2CR12", "CASP8", "SRGAP2C", "STXBP4", "RCCD1"))) %>% 
  gather(group, value, -gene) %>% 
  ggplot(aes(x = group, y = value)) +
  geom_boxplot()+
  facet_wrap(~gene, scales = "free_y")+
  labs(x = "", y = "")+
  theme_bw()+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

ggsave("Paper_PrediXcan/plot/6genes_GWAS.jpg", width = 8, height = 6)

total_variation_TMEM245 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_TMEM245 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_TMEM245 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_TMEM245 + group_2_variation_TMEM245)/total_variation_TMEM245

(p_TMEM245 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.03")), x=1.9, y = 0.4)+
    theme(axis.title.x=element_blank(),
          axis.text.x=element_blank(),
          axis.ticks.x=element_blank()))

total_variation_DNAAF3 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_DNAAF3 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_DNAAF3 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_DNAAF3 + group_2_variation_DNAAF3)/total_variation_DNAAF3

(p_DNAAF3 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.11")), x=1.9, y = 0.6)+
    theme(axis.title.x=element_blank(),
          axis.text.x=element_blank(),
          axis.ticks.x=element_blank()))



p_blank <- read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3.csv") %>% 
  gather(group, value, -gene) %>% 
  ggplot(aes(x = group, y = value))+
  # geom_blank()+
  theme_void()+
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())



p_mixcan <- cowplot::plot_grid(p_TMEM245, p_DNAAF3, p_blank,p_blank,p_blank,p_blank,nrow = 1)

total_variation_STXBP4 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_STXBP4 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_STXBP4 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_STXBP4 + group_2_variation_STXBP4)/total_variation_STXBP4

(p_STXBP4 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.91")), x=1.9, y = 0.5)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

total_variation_ALS2CR12 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_ALS2CR12 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_ALS2CR12 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_ALS2CR12 + group_2_variation_ALS2CR12)/total_variation_ALS2CR12

(p_ALS2CR12 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    scale_y_continuous(breaks = c(-0.8,-0.6,-0.4,-0.2,0))+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.33")), x=1.9, y = 0.0)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

total_variation_RCCD1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_RCCD1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_RCCD1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_RCCD1 + group_2_variation_RCCD1)/total_variation_RCCD1

(p_RCCD1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    scale_y_continuous(breaks = c(-0.5,0,0.5,1,1.5,2))+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.41")), x=1.9, y = 1.7)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))
total_variation_CASP8 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_CASP8 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_CASP8 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_CASP8 + group_2_variation_CASP8)/total_variation_CASP8

(p_CASP8 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    scale_y_continuous(limits = c(0,1.2))+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.99")), x=1.9, y = 1.0)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))
total_variation_SRGAP2C <- read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_SRGAP2C <- read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_SRGAP2C <- read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_SRGAP2C + group_2_variation_SRGAP2C)/total_variation_SRGAP2C

(p_SRGAP2C <- read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    # scale_y_continuous(limits = c(0,1.2))+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.01")), x=1.9, y = 0.0)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

total_variation_HSF2 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_HSF2 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_HSF2 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_HSF2 + group_2_variation_HSF2)/total_variation_HSF2

(p_HSF2 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    # scale_y_continuous(limits = c(0,1.2))+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.99")), x=1.9, y = 0.3)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

p_PrediXcan <- cowplot::plot_grid(p_ALS2CR12, p_RCCD1, p_CASP8, p_SRGAP2C, p_STXBP4, p_HSF2, nrow = 1)


p_combined <- cowplot::plot_grid(p_mixcan, p_PrediXcan, align = "l", nrow = 2, labels = "AUTO", rel_heights = c(0.35,0.65))
ggsave(p_combined, file = "Paper_PrediXcan/plot/figure_s5_with_intercept.jpg", width = 10, height = 6)


# 6 genes no intercept ----------------------------------------------------
gene_chr15_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr15") %>% 
  pull(index)
gene_chr15_index 
chr15 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr15.txt")

chr15_data_frame <- chr15 %>% 
  mutate(rowname = paste0(str_replace_all(chr15$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")

result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
i=1420
yName = "ENSG00000166965"
xName1=  result_1_6461[[i]]$Beta1[,3]
xName=intersect(xName1, rownames(chr15_data_frame))


xData=chr15_data_frame[match(xName, rownames(chr15_data_frame)),]

cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]


Beta1 <- result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F]
Beta2 <- result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]




beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]

yhat_cell_1 <- t(xData) %*% as.matrix(Beta1)
yhat_cell_2 <- t(xData) %*% as.matrix(Beta2)


yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 

tibble("MiXcan (Epithelial)" = yhat_cell_1[,1],
       "MiXcan (Non-Epithelial)" = yhat_cell_2[,1],
       PrediXcan = yhat_cell_1_en[,1]) %>% 
  mutate(gene = "RCCD1") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1_no_intercept.csv")


gene_chr17_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr17") %>% 
  pull(index)
gene_chr17_index 
chr17 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr17.txt")

chr17_data_frame <- chr17 %>% 
  mutate(rowname = paste0(str_replace_all(chr17$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
# load("../Rdata/GTEx_result_1_6461_epi.Rdata")

# result_1_6461 <- result_1_6461_epi
# yhat_cell_1_all <- NULL
# yhat_cell_2_all <- NULL
# yhat_cell_1_en_all <- NULL
# yhat_cell_2_en_all <- NULL
# yhat_cell_1_interaction_all <- NULL
# yhat_cell_2_interaction_all <- NULL
# yhat_cell_1_interaction_cell_2_all <- NULL
# yhat_cell_2_interaction_cell_2_all <- NULL
i=1997
yName = "ENSG00000166965"
xName1=  result_1_6461[[i]]$Beta1[,3]
xName=intersect(xName1, rownames(chr17_data_frame))


xData=chr17_data_frame[match(xName, rownames(chr17_data_frame)),]

cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]


Beta1 <- result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F]
Beta2 <- result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]




beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]

yhat_cell_1 <- t(xData) %*% as.matrix(Beta1)
yhat_cell_2 <- t(xData) %*% as.matrix(Beta2)


yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 

tibble("MiXcan (Epithelial)" = yhat_cell_1[,1],
       "MiXcan (Non-Epithelial)" = yhat_cell_2[,1],
       PrediXcan = yhat_cell_1_en[,1]) %>% 
  mutate(gene = "STXBP4") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4_no_intercept.csv")

gene_chr01_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr01") %>% 
  pull(index)
gene_chr01_index 
chr01 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr01.txt")

chr01_data_frame <- chr01 %>% 
  mutate(rowname = paste0(str_replace_all(chr01$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")

result_1_6461 <- result_1_6461_epi
# yhat_cell_1_all <- NULL
# yhat_cell_2_all <- NULL
# yhat_cell_1_en_all <- NULL
# yhat_cell_2_en_all <- NULL
# yhat_cell_1_interaction_all <- NULL
# yhat_cell_2_interaction_all <- NULL
# yhat_cell_1_interaction_cell_2_all <- NULL
# yhat_cell_2_interaction_cell_2_all <- NULL
i=3033
# yName = "ENSG00000166965"
xName1=  result_1_6461[[i]]$Beta1[,3]
xName=intersect(xName1, rownames(chr01_data_frame))


xData=chr01_data_frame[match(xName, rownames(chr01_data_frame)),]

cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]


Beta1 <- result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F]
Beta2 <- result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]




beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]

yhat_cell_1 <- t(xData) %*% as.matrix(Beta1)
yhat_cell_2 <- t(xData) %*% as.matrix(Beta2)


yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 

tibble("MiXcan (Epithelial)" = yhat_cell_1[,1],
       "MiXcan (Non-Epithelial)" = yhat_cell_2[,1],
       PrediXcan = yhat_cell_1_en[,1]) %>% 
  mutate(gene = "SRGAP2C") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C_no_intercept.csv")
rm(chr01)
rm(chr01_data_frame) 

gene_chr02_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr02") %>% 
  pull(index)
gene_chr02_index 
chr02 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr02.txt")

chr02_data_frame <- chr02 %>% 
  mutate(rowname = paste0(str_replace_all(chr02$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
# load("../Rdata/GTEx_result_1_6461_epi.Rdata")

# result_1_6461 <- result_1_6461_epi
# yhat_cell_1_all <- NULL
# yhat_cell_2_all <- NULL
# yhat_cell_1_en_all <- NULL
# yhat_cell_2_en_all <- NULL
# yhat_cell_1_interaction_all <- NULL
# yhat_cell_2_interaction_all <- NULL
# yhat_cell_1_interaction_cell_2_all <- NULL
# yhat_cell_2_interaction_cell_2_all <- NULL
i=4168
# yName = "ENSG00000266965"
xName1=  result_1_6461[[i]]$Beta1[,3]
xName=intersect(xName1, rownames(chr02_data_frame))


xData=chr02_data_frame[match(xName, rownames(chr02_data_frame)),]

cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]


Beta1 <- result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F]
Beta2 <- result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]




beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]

yhat_cell_1 <- t(xData) %*% as.matrix(Beta1)
yhat_cell_2 <- t(xData) %*% as.matrix(Beta2)


yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 

tibble("MiXcan (Epithelial)" = yhat_cell_1[,1],
       "MiXcan (Non-Epithelial)" = yhat_cell_2[,1],
       PrediXcan = yhat_cell_1_en[,1]) %>% 
  mutate(gene = "ALS2CR12") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12_no_intercept.csv")

tibble("MiXcan (Epithelial)" = yhat_cell_1[,1],
       "MiXcan (Non-Epithelial)" = yhat_cell_2[,1],
       PrediXcan = yhat_cell_1_en[,1]) %>% 
  mutate(gene = "CASP8") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8_no_intercept.csv")
rm(chr02)
rm(chr02_data_frame) 

gene_chr09_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr09") %>% 
  pull(index)
gene_chr09_index 
chr09 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr09.txt")

chr09_data_frame <- chr09 %>% 
  mutate(rowname = paste0(str_replace_all(chr09$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
# load("../Rdata/GTEx_result_1_6461_epi.Rdata")

# result_1_6461 <- result_1_6461_epi
# yhat_cell_1_all <- NULL
# yhat_cell_2_all <- NULL
# yhat_cell_1_en_all <- NULL
# yhat_cell_2_en_all <- NULL
# yhat_cell_1_interaction_all <- NULL
# yhat_cell_2_interaction_all <- NULL
# yhat_cell_1_interaction_cell_2_all <- NULL
# yhat_cell_2_interaction_cell_2_all <- NULL
i=6297
# yName = "ENSG00000966965"
xName1=  result_1_6461[[i]]$Beta1[,3]
xName=intersect(xName1, rownames(chr09_data_frame))


xData=chr09_data_frame[match(xName, rownames(chr09_data_frame)),]

cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]


Beta1 <- result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F]
Beta2 <- result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]




beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]

yhat_cell_1 <- t(xData) %*% as.matrix(Beta1)
yhat_cell_2 <- t(xData) %*% as.matrix(Beta2)


yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 

tibble("MiXcan (Epithelial)" = yhat_cell_1[,1],
       "MiXcan (Non-Epithelial)" = yhat_cell_2[,1],
       PrediXcan = yhat_cell_1_en[,1]) %>% 
  mutate(gene = "TMEM245") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245_no_intercept.csv")


rm(chr09)
rm(chr09_data_frame) 

gene_chr19_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr19") %>% 
  pull(index)
gene_chr19_index 
chr19 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr19.txt")

chr19_data_frame <- chr19 %>% 
  mutate(rowname = paste0(str_replace_all(chr19$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")

result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
i=2676
yName = "ENSG00000166965"
xName1=  result_1_6461[[i]]$Beta1[,3]
xName=intersect(xName1, rownames(chr19_data_frame))


xData=chr19_data_frame[match(xName, rownames(chr19_data_frame)),]

cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]


Beta1 <- result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F]
Beta2 <- result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]




beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]

yhat_cell_1 <- t(xData) %*% as.matrix(Beta1)
yhat_cell_2 <- t(xData) %*% as.matrix(Beta2)


yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 

tibble("MiXcan (Epithelial)" = yhat_cell_1[,1],
       "MiXcan (Non-Epithelial)" = yhat_cell_2[,1],
       PrediXcan = yhat_cell_1_en[,1]) %>% 
  mutate(gene = "DNAAF3") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3_no_intercept.csv")

rm(chr19)
rm(chr19_data_frame) 

gene_chr05_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr5_") %>% 
  pull(index)
gene_chr05_index 
chr05 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr05.txt")

chr05_data_frame <- chr05 %>% 
  mutate(rowname = paste0(str_replace_all(chr05$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")

result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
i=5021
yName = "ENSG00000164199"
xName1=  result_1_6461[[i]]$Beta1[,3]
xName=intersect(xName1, rownames(chr05_data_frame))


xData=chr05_data_frame[match(xName, rownames(chr05_data_frame)),]

cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]


Beta1 <- result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F]
Beta2 <- result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]




beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]

yhat_cell_1 <- t(xData) %*% as.matrix(Beta1)
yhat_cell_2 <- t(xData) %*% as.matrix(Beta2)


yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 

tibble("MiXcan (Epithelial)" = yhat_cell_1[,1],
       "MiXcan (Non-Epithelial)" = yhat_cell_2[,1],
       PrediXcan = yhat_cell_1_en[,1]) %>% 
  mutate(gene = "ADGRV1") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_ADGRV1_no_intercept.csv")

rm(chr05)
rm(chr05_data_frame) 

gene_chr06_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr6_") %>% 
  pull(index)
gene_chr06_index 
chr06 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr06.txt")

chr06_data_frame <- chr06 %>% 
  mutate(rowname = paste0(str_replace_all(chr06$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
# load("../Rdata/GTEx_result_1_6461_epi.Rdata")

result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
i=5485
yName = "ENSG00000025156"
xName1=  result_1_6461[[i]]$Beta1[,3]
xName=intersect(xName1, rownames(chr06_data_frame))


xData=chr06_data_frame[match(xName, rownames(chr06_data_frame)),]

cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]


Beta1 <- result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F]
Beta2 <- result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]




beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]

yhat_cell_1 <- t(xData) %*% as.matrix(Beta1)
yhat_cell_2 <- t(xData) %*% as.matrix(Beta2)


yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 

tibble("MiXcan (Epithelial)" = yhat_cell_1[,1],
       "MiXcan (Non-Epithelial)" = yhat_cell_2[,1],
       PrediXcan = yhat_cell_1_en[,1]) %>% 
  mutate(gene = "HSF2") %>% 
  write_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2_no_intercept.csv")

rm(chr06)
rm(chr06_data_frame) 

total_variation_TMEM245 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245_no_intercept.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_TMEM245 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_TMEM245 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245_no_intercept.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_TMEM245 + group_2_variation_TMEM245)/total_variation_TMEM245

(p_TMEM245 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.06")), x=1.9, y = 0.4)+
    theme(axis.title.x=element_blank(),
          axis.text.x=element_blank(),
          axis.ticks.x=element_blank()))

total_variation_DNAAF3 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3_no_intercept.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_DNAAF3 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_DNAAF3 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3_no_intercept.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_DNAAF3 + group_2_variation_DNAAF3)/total_variation_DNAAF3

(p_DNAAF3 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_DNAAF3_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.64")), x=1.9, y = 0.6)+
    theme(axis.title.x=element_blank(),
          axis.text.x=element_blank(),
          axis.ticks.x=element_blank()))

total_variation_ADGRV1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ADGRV1_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_ADGRV1_no_intercept.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_ADGRV1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ADGRV1_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_ADGRV1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ADGRV1_no_intercept.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_ADGRV1 + group_2_variation_ADGRV1)/total_variation_ADGRV1

p_blank <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ADGRV1_no_intercept.csv") %>% 
  gather(group, value, -gene) %>% 
  ggplot(aes(x = group, y = value))+
  # geom_blank()+
  theme_void()+
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())

(p_ADGRV1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ADGRV1_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.87")), x=1.9, y = 0.6)+
    theme(axis.title.x=element_blank(),
          axis.text.x=element_blank(),
          axis.ticks.x=element_blank()))

p_mixcan <- cowplot::plot_grid(p_TMEM245, p_DNAAF3, p_blank,p_blank,p_blank,p_blank,nrow = 1)

total_variation_STXBP4 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4_no_intercept.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_STXBP4 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_STXBP4 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4_no_intercept.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_STXBP4 + group_2_variation_STXBP4)/total_variation_STXBP4

(p_STXBP4 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.91")), x=1.9, y = 0.5)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

total_variation_ALS2CR12 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12_no_intercept.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_ALS2CR12 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_ALS2CR12 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12_no_intercept.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_ALS2CR12 + group_2_variation_ALS2CR12)/total_variation_ALS2CR12

(p_ALS2CR12 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    scale_y_continuous(breaks = c(-0.8,-0.6,-0.4,-0.2,0))+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.71")), x=1.9, y = 0.0)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

total_variation_RCCD1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1_no_intercept.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_RCCD1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_RCCD1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1_no_intercept.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_RCCD1 + group_2_variation_RCCD1)/total_variation_RCCD1

(p_RCCD1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    scale_y_continuous(breaks = c(-0.5,0,0.5,1,1.5,2))+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.41")), x=1.9, y = 1.7)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))
total_variation_CASP8 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8_no_intercept.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_CASP8 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_CASP8 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8_no_intercept.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_CASP8 + group_2_variation_CASP8)/total_variation_CASP8

(p_CASP8 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    scale_y_continuous(limits = c(0,1.2))+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.99")), x=1.9, y = 1.0)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))
total_variation_SRGAP2C <- read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C_no_intercept.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_SRGAP2C <- read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_SRGAP2C <- read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C_no_intercept.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_SRGAP2C + group_2_variation_SRGAP2C)/total_variation_SRGAP2C

(p_SRGAP2C <- read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    # scale_y_continuous(limits = c(0,1.2))+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.51")), x=1.9, y = 0.0)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

total_variation_HSF2 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2_no_intercept.csv") %>% 
              select(value = 2) %>% 
              mutate(group = "MiXcan (Non-Epithelial)")) %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_1_variation_HSF2 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2_no_intercept.csv") %>% 
  select(value = 1) %>% 
  mutate(group = "MiXcan (Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

group_2_variation_HSF2 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2_no_intercept.csv") %>% 
  select(value = 2) %>% 
  mutate(group = "MiXcan (Non-Epithelial)") %>% 
  mutate(mean = mean(value),
         difference_square = (value - mean) ^ 2) %>% 
  pull(difference_square) %>% sum

(group_1_variation_HSF2 + group_2_variation_HSF2)/total_variation_HSF2

(p_HSF2 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_HSF2_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene)+
    labs(x = "", y = "")+
    theme_bw()+
    # scale_y_continuous(limits = c(0,1.2))+
    annotate("text", label = expression(paste(frac(SS[within], SS[total]), " = 0.99")), x=1.9, y = 0.3)+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

p_PrediXcan <- cowplot::plot_grid(p_ALS2CR12, p_RCCD1, p_CASP8, p_SRGAP2C, p_STXBP4, p_HSF2, nrow = 1)


p_combined <- cowplot::plot_grid(p_mixcan, p_PrediXcan, align = "l", nrow = 2, labels = "AUTO", rel_heights = c(0.35,0.65))
ggsave(p_combined, file = "Paper_PrediXcan/plot/figure_s5_no_intercept.jpg", width = 10, height = 6)


library(ggpubr)
library(tidyverse)
(p_boxplot <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245_no_intercept.csv") %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12_no_intercept.csv")) %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8_no_intercept.csv")) %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C_no_intercept.csv")) %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4_no_intercept.csv")) %>% 
  bind_rows(read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1_no_intercept.csv")) %>% 
  mutate(gene = factor(gene, levels = c("TMEM245", "ALS2CR12", "CASP8", "SRGAP2C", "STXBP4", "RCCD1"))) %>% 
  gather(group, value, -gene) %>% 
  ggplot(aes(x = group, y = value)) +
  geom_boxplot()+
  facet_wrap(~gene, scales = "free_y", nrow = 1)+
  labs(x = "", y = "")+
  theme_bw()+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

# ggsave("Paper_PrediXcan/plot/6genes_GWAS_no_intercept.jpg", width = 8, height = 6)

(p_boxplot_TMEM245 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245_no_intercept.csv") %>% 
  gather(group, value, -gene) %>% 
  ggplot(aes(x = group, y = value)) +
  geom_boxplot()+
  facet_wrap(~gene, scales = "free_y", nrow = 1)+
  labs(x = "", y = "")+
  theme_bw()+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

(p_boxplot_ALS2CR12 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene, scales = "free_y", nrow = 1)+
    labs(x = "", y = "")+
    theme_bw()+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

(p_boxplot_CASP8 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene, scales = "free_y", nrow = 1)+
    labs(x = "", y = "")+
    theme_bw()+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

(p_boxplot_SRGAP2C <- read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene, scales = "free_y", nrow = 1)+
    labs(x = "", y = "")+
    theme_bw()+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

(p_boxplot_STXBP4 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene, scales = "free_y", nrow = 1)+
    labs(x = "", y = "")+
    theme_bw()+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

(p_boxplot_RCCD1 <- read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1_no_intercept.csv") %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(x = group, y = value)) +
    geom_boxplot()+
    facet_wrap(~gene, scales = "free_y", nrow = 1)+
    labs(x = "", y = "")+
    theme_bw()+
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)))

(p_oncoarray_TMEM245_no_intercept <- read_csv("Paper_PrediXcan/Rdata/oncoarray_TMEM245_no_intercept.csv") %>% 
  select(-PrediXcan) %>% 
  gather(group, value, -gene) %>% 
  ggplot(aes(d = group , m = value)) + 
  geom_roc(labels = FALSE) + style_roc())

(p_oncoarray_TMEM245_no_intercept <- p_oncoarray_TMEM245_no_intercept+
    annotate("text", x = .65, y = .25, 
             label = paste("AUC =", round(calc_auc(p_oncoarray_TMEM245_no_intercept)$AUC, 2))) +scale_x_continuous("", breaks = seq(0, 1, by = .5))+scale_y_continuous("", breaks = seq(0, 1, by = .5)))

(p_oncoarray_ALS2CR12_no_intercept <- read_csv("Paper_PrediXcan/Rdata/oncoarray_ALS2CR12_no_intercept.csv") %>% 
    select(-PrediXcan) %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(d = group , m = value)) + 
    geom_roc(labels = FALSE) + style_roc())

(p_oncoarray_ALS2CR12_no_intercept <- p_oncoarray_ALS2CR12_no_intercept+
    annotate("text", x = .65, y = .25, 
             label = paste("AUC =", round(calc_auc(p_oncoarray_ALS2CR12_no_intercept)$AUC, 2))) +
    scale_x_continuous("", breaks = seq(0, 1, by = .5))+scale_y_continuous("", breaks = seq(0, 1, by = .5)))

(p_oncoarray_CASP8_no_intercept <- read_csv("Paper_PrediXcan/Rdata/oncoarray_CASP8_no_intercept.csv") %>% 
    select(-PrediXcan) %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(d = group , m = value)) + 
    geom_roc(labels = FALSE) + style_roc())

(p_oncoarray_CASP8_no_intercept <- p_oncoarray_CASP8_no_intercept+
    annotate("text", x = .65, y = .25, 
             label = paste("AUC =", round(calc_auc(p_oncoarray_CASP8_no_intercept)$AUC, 2))) +
    scale_x_continuous("", breaks = seq(0, 1, by = .5))+scale_y_continuous("", breaks = seq(0, 1, by = .5)))

(p_oncoarray_SRGAP2C_no_intercept <- read_csv("Paper_PrediXcan/Rdata/oncoarray_SRGAP2C_no_intercept.csv") %>% 
    select(-PrediXcan) %>% 
    gather(group, value, -gene) %>% 
    ggplot(aes(d = group , m = value)) + 
    geom_roc(labels = FALSE) + style_roc())

(p_oncoarray_SRGAP2C_no_intercept <- p_oncoarray_SRGAP2C_no_intercept+
    annotate("text", x = .65, y = .25, 
             label = paste("AUC =", round(calc_auc(p_oncoarray_SRGAP2C_no_intercept)$AUC, 2))) +
    scale_x_continuous("", breaks = seq(0, 1, by = .5))+scale_y_continuous("", breaks = seq(0, 1, by = .5)))

(p_oncoarray_STXBP4_no_intercept <- read_csv("Paper_PrediXcan/Rdata/oncoarray_STXBP4_no_intercept.csv") %>% 
    select(-PrediXcan) %>% 
    gather(group, value, -gene) %>% 
    mutate(group = ifelse(group == "MiXcan (Epithelial)", 1, 0)) %>% 
    ggplot(aes(d = group , m = value)) + 
    geom_roc(labels = FALSE) + style_roc())


(p_oncoarray_STXBP4_no_intercept <- p_oncoarray_STXBP4_no_intercept+
  annotate("text", x = .65, y = .25, 
           label = paste("AUC =", round(calc_auc(p_oncoarray_STXBP4_no_intercept)$AUC, 2))) +
    scale_x_continuous("", breaks = seq(0, 1, by = .5))+scale_y_continuous("", breaks = seq(0, 1, by = .5)))

(p_oncoarray_RCCD1_no_intercept <- read_csv("Paper_PrediXcan/Rdata/oncoarray_RCCD1_no_intercept.csv") %>% 
    select(-PrediXcan) %>% 
    gather(group, value, -gene) %>% 
    mutate(group = ifelse(group == "MiXcan (Epithelial)", 1, 0)) %>% 
    ggplot(aes(d = group , m = value)) + 
    geom_roc(labels = FALSE) + style_roc())

(p_oncoarray_RCCD1_no_intercept <- p_oncoarray_RCCD1_no_intercept+
  annotate("text", x = .65, y = .25, 
           label = paste("AUC =", round(calc_auc(p_oncoarray_RCCD1_no_intercept)$AUC, 2))) +
    scale_x_continuous("", breaks = seq(0, 1, by = .5))+scale_y_continuous("", breaks = seq(0, 1, by = .5)))

# p_AUC_combined <- cowplot::plot_grid(p_oncoarray_TMEM245_no_intercept, p_oncoarray_ALS2CR12_no_intercept, p_oncoarray_CASP8_no_intercept, p_oncoarray_SRGAP2C_no_intercept, p_oncoarray_STXBP4_no_intercept, p_oncoarray_RCCD1_no_intercept, nrow = 1)

# p_combined_final <- cowplot::plot_grid(p_boxplot, p_AUC_combined, nrow = 2, rel_heights = c(0.7,0.3))
# ggsave(p_combined_final, file = "Paper_PrediXcan/Plot/6genes_GWAS_no_intercept_combined.png", height = 5, width = 12)

p_TMEM245 <- cowplot::plot_grid(p_boxplot_TMEM245, p_oncoarray_TMEM245_no_intercept, nrow = 2, rel_heights = c(0.7,0.3), align = "v")

p_ALS2CR12 <- cowplot::plot_grid(p_boxplot_ALS2CR12, p_oncoarray_ALS2CR12_no_intercept, nrow = 2, rel_heights = c(0.7,0.3), align = "v")

p_CASP8 <- cowplot::plot_grid(p_boxplot_CASP8, p_oncoarray_CASP8_no_intercept, nrow = 2, rel_heights = c(0.7,0.3), align = "v")

p_SRGAP2C <- cowplot::plot_grid(p_boxplot_SRGAP2C, p_oncoarray_SRGAP2C_no_intercept, nrow = 2, rel_heights = c(0.7,0.3), align = "v")

p_STXBP4 <- cowplot::plot_grid(p_boxplot_STXBP4, p_oncoarray_STXBP4_no_intercept, nrow = 2, rel_heights = c(0.7,0.3), align = "v")

p_RCCD1 <- cowplot::plot_grid(p_boxplot_RCCD1, p_oncoarray_RCCD1_no_intercept, nrow = 2, rel_heights = c(0.7,0.3), align = "v")

p_final <- cowplot::plot_grid(p_TMEM245, p_ALS2CR12,p_CASP8, p_SRGAP2C, p_STXBP4, p_RCCD1, nrow = 1)

ggsave(p_final, file = "Paper_PrediXcan/Plot/6genes_GWAS_no_intercept_combined.png", height = 6, width = 12)
# Predictdb Chr 22 ------------------------------------------------------------------
gene_chr22_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr22") %>% 
  pull(index)
gene_chr22_index %>% length
chr22 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr22.txt")

chr22_data_frame <- chr22 %>% 
  mutate(rowname = paste0(str_replace_all(chr22$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr22_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr22_data_frame))
  xData <- chr22_data_frame[match(xName, rownames(chr22_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr22 <- yhat_all
save(yhat_all_chr22, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr22.Rdata")

library(tidyverse)
library(RSQLite)
library(data.table)
filename <- "Paper_PrediXcan/Data/V8_ElasticNetModel/mashr_Breast_Mammary_Tissue.db"
sqlite.driver <- dbDriver("SQLite")
ElasticNet <- dbConnect(sqlite.driver,
                        dbname = filename)
dbListTables(ElasticNet)
ENextra <- dbReadTable(ElasticNet,"extra")
ENweights <- dbReadTable(ElasticNet,"weights")
ENweights[1:3,]
gene=unique(ENweights$gene)
# Predictdb Chr 21 ------------------------------------------------------------------
gene_chr21_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr21") %>% 
  pull(index)

chr21 <- vroom::vroom("Paper_PrediXcan/Data/OncoArray/oncoarray_dosages_chr21.txt")

chr21_data_frame <- chr21 %>% 
  mutate(rowname = paste0(str_replace_all(chr21$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")

xName <- vector("list", length(gene_chr21_index))
names(xName) <- gene_chr21_index
for (i in 1:length(gene_chr21_index)){
  yName=gene[gene_chr21_index[i]]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName[[i]] <- intersect(SubDat$varID, rownames(chr21_data_frame))
}

save(xName, file = "Paper_PrediXcan/Rdata/OncoArray_chr_21_xName.Rdata")
yhat_all <- NULL
for (i in gene_chr21_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr21_data_frame))
  xData <- chr21_data_frame[match(xName, rownames(chr21_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  if (length(xWeights) == 1){
    yhat= t(t(xData)) * as.numeric(xWeights)
    yhat_all <- cbind(yhat_all, yhat)
  } else {
    yhat= t(xData) %*% matrix(xWeights)
    yhat_all <- cbind(yhat_all, yhat)
  }
  print(i)
}
yhat_all_chr21 <- yhat_all
save(yhat_all_chr21, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr21.Rdata")

# Predictdb Chr 20 ------------------------------------------------------------------
gene_chr20_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr20") %>% 
  pull(index)

chr20 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr20.txt")

chr20_data_frame <- chr20 %>% 
  mutate(rowname = paste0(str_replace_all(chr20$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr20_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr20_data_frame))
  xData <- chr20_data_frame[match(xName, rownames(chr20_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  if (length(xWeights) == 1){
    yhat= t(t(xData)) * as.numeric(xWeights)
    yhat_all <- cbind(yhat_all, yhat)
  } else {
    yhat= t(xData) %*% matrix(xWeights)
    yhat_all <- cbind(yhat_all, yhat)
  }
  print(i)
}
yhat_all_chr20 <- yhat_all
save(yhat_all_chr20, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr20.Rdata")

# Predictdb Chr 16 ------------------------------------------------------------------
gene_chr16_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr16") %>% 
  pull(index)
gene_chr16_index %>% length
chr16 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr16.txt")

chr16_data_frame <- chr16 %>% 
  mutate(rowname = paste0(str_replace_all(chr16$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr16_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr16_data_frame))
  xData <- chr16_data_frame[match(xName, rownames(chr16_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  # yhat_t= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr16 <- yhat_all
save(yhat_all_chr16, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr16.Rdata")

# Predictdb Chr 17 ------------------------------------------------------------------
gene_chr17_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr17") %>% 
  pull(index)
gene_chr17_index %>% length
chr17 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr17.txt")

chr17_data_frame <- chr17 %>% 
  mutate(rowname = paste0(str_replace_all(chr17$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr17_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr17_data_frame))
  xData <- chr17_data_frame[match(xName, rownames(chr17_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  # yhat_t= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr17 <- yhat_all
save(yhat_all_chr17, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr17.Rdata")

# Predictdb Chr 19 ------------------------------------------------------------------
gene_chr19_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr19") %>% 
  pull(index)
gene_chr19_index %>% length
chr19 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr19.txt")

chr19_data_frame <- chr19 %>% 
  mutate(rowname = paste0(str_replace_all(chr19$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr19_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr19_data_frame))
  xData <- chr19_data_frame[match(xName, rownames(chr19_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr19 <- yhat_all
save(yhat_all_chr19, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr19.Rdata")

library(tidyverse)
library(RSQLite)
library(data.table)
filename <- "Paper_PrediXcan/Data/V8_ElasticNetModel/mashr_Breast_Mammary_Tissue.db"
sqlite.driver <- dbDriver("SQLite")
ElasticNet <- dbConnect(sqlite.driver,
                        dbname = filename)
dbListTables(ElasticNet)
ENextra <- dbReadTable(ElasticNet,"extra")
ENweights <- dbReadTable(ElasticNet,"weights")
ENweights[1:3,]
gene=unique(ENweights$gene)
# Predictdb Chr 14 ------------------------------------------------------------------
gene_chr14_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr14") %>% 
  pull(index)
gene_chr14_index %>% length
chr14 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr14.txt")

chr14_data_frame <- chr14 %>% 
  mutate(rowname = paste0(str_replace_all(chr14$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr14_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr14_data_frame))
  xData <- chr14_data_frame[match(xName, rownames(chr14_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  # yhat_t= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr14 <- yhat_all
save(yhat_all_chr14, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr14.Rdata")

# Predictdb Chr 13 ------------------------------------------------------------------
gene_chr13_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr13") %>% 
  pull(index)
gene_chr13_index %>% length
chr13 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr13.txt")

chr13_data_frame <- chr13 %>% 
  mutate(rowname = paste0(str_replace_all(chr13$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr13_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr13_data_frame))
  xData <- chr13_data_frame[match(xName, rownames(chr13_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  # yhat_t= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr13 <- yhat_all
save(yhat_all_chr13, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr13.Rdata")

# Proposed Chr 10 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6010)

gene_chr10_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr10") %>% 
  pull(index)
gene_chr10_index 
chr10 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr10.txt")

chr10_data_frame <- chr10 %>% 
  mutate(rowname = paste0(str_replace_all(chr10$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr10_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr10_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr10_data_frame[match(xName, rownames(chr10_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr10.Rdata"
)

# Predictdb Chr 9 ------------------------------------------------------------------
gene_chr9_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr9_") %>% 
  pull(index)
gene_chr9_index %>% length
chr9 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr9.txt")

chr9_data_frame <- chr9 %>% 
  mutate(rowname = paste0(str_replace_all(chr9$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr9_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr9_data_frame))
  xData <- chr9_data_frame[match(xName, rownames(chr9_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr9 <- yhat_all
save(yhat_all_chr9, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr9.Rdata")
# Predictdb Chr 8 ------------------------------------------------------------------
gene_chr8_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr8_") %>% 
  pull(index)
gene_chr8_index %>% length
chr8 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr8.txt")

chr8_data_frame <- chr8 %>% 
  mutate(rowname = paste0(str_replace_all(chr8$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr8_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr8_data_frame))
  xData <- chr8_data_frame[match(xName, rownames(chr8_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr8 <- yhat_all
save(yhat_all_chr8, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr8.Rdata")
# Predictdb Chr 7 ------------------------------------------------------------------
gene_chr7_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr7_") %>% 
  pull(index)
gene_chr7_index %>% length
chr7 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr7.txt")

chr7_data_frame <- chr7 %>% 
  mutate(rowname = paste0(str_replace_all(chr7$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr7_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr7_data_frame))
  xData <- chr7_data_frame[match(xName, rownames(chr7_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr7 <- yhat_all
save(yhat_all_chr7, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr7.Rdata")
# Predictdb Chr 6 ------------------------------------------------------------------
gene_chr6_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr6_") %>% 
  pull(index)
gene_chr6_index %>% length
chr6 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr6.txt")

chr6_data_frame <- chr6 %>% 
  mutate(rowname = paste0(str_replace_all(chr6$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr6_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr6_data_frame))
  xData <- chr6_data_frame[match(xName, rownames(chr6_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr6 <- yhat_all
save(yhat_all_chr6, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr6.Rdata")
# Predictdb Chr 5 ------------------------------------------------------------------
gene_chr5_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr5_") %>% 
  pull(index)
gene_chr5_index %>% length
chr5 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr5.txt")

chr5_data_frame <- chr5 %>% 
  mutate(rowname = paste0(str_replace_all(chr5$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr5_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr5_data_frame))
  xData <- chr5_data_frame[match(xName, rownames(chr5_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr5 <- yhat_all
save(yhat_all_chr5, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr5.Rdata")
# Predictdb Chr 4 ------------------------------------------------------------------
gene_chr4_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr4_") %>% 
  pull(index)
gene_chr4_index %>% length
chr4 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr4.txt")

chr4_data_frame <- chr4 %>% 
  mutate(rowname = paste0(str_replace_all(chr4$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr4_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr4_data_frame))
  xData <- chr4_data_frame[match(xName, rownames(chr4_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr4 <- yhat_all
save(yhat_all_chr4, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr4.Rdata")
# Predictdb Chr 3 ------------------------------------------------------------------
gene_chr3_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr3_") %>% 
  pull(index)
gene_chr3_index %>% length
chr3 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr3.txt")

chr3_data_frame <- chr3 %>% 
  mutate(rowname = paste0(str_replace_all(chr3$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr3_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr3_data_frame))
  xData <- chr3_data_frame[match(xName, rownames(chr3_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr3 <- yhat_all
save(yhat_all_chr3, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr3.Rdata")
# Predictdb Chr 2 ------------------------------------------------------------------
gene_chr2_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr2_") %>% 
  pull(index)
gene_chr2_index %>% length
chr2 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr02.txt")

chr2_data_frame <- chr2 %>% 
  mutate(rowname = paste0(str_replace_all(chr2$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr2_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr2_data_frame))
  xData <- chr2_data_frame[match(xName, rownames(chr2_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr2 <- yhat_all
save(yhat_all_chr2, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr2.Rdata")
# Predictdb Chr 1 ------------------------------------------------------------------
gene_chr1_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr1_") %>% 
  pull(index)
gene_chr1_index %>% length
chr1 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr1.txt")

chr1_data_frame <- chr1 %>% 
  mutate(rowname = paste0(str_replace_all(chr1$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
yhat_all <- NULL
for (i in gene_chr1_index){
  yName=gene[i]
  SubDat=ENweights[which(ENweights$gene==yName), ]
  
  xName <- intersect(SubDat$varID, rownames(chr1_data_frame))
  xData <- chr1_data_frame[match(xName, rownames(chr1_data_frame)) ,]
  
  xWeights= SubDat[match(xName, SubDat$varID), "weight"]
  # if (length(xWeights) == 1){
  #   yhat= t(t(xData)) * as.numeric(xWeights)
  #   yhat_all <- cbind(yhat_all, yhat)
  # } else {
  yhat= t(xData) %*% matrix(xWeights)
  yhat_all <- cbind(yhat_all, yhat)
  # }
  print(i)
}
yhat_all_chr1 <- yhat_all
save(yhat_all_chr1, file = "Paper_PrediXcan/Rdata/predictdb_oncoarray_chr1.Rdata")
# Proposed Chr 22 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6022)

gene_chr22_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr22") %>% 
  pull(index)
gene_chr22_index 
chr22 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr22.txt")

chr22_data_frame <- chr22 %>% 
  mutate(rowname = paste0(str_replace_all(chr22$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr22_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr22_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr22_data_frame[match(xName, rownames(chr22_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr22.Rdata"
)

# Proposed Chr 21 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6019)

gene_chr21_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr21") %>% 
  pull(index)
gene_chr21_index %>% length
chr21 <- vroom::vroom("Paper_PrediXcan/Data/OncoArray/oncoarray_dosages_chr21.txt")

ENweights %>% 
  as_tibble() %>% 
  mutate(chr = str_sub(varID, 1, 5)) %>% 
  filter(chr == "chr21") %>% 
  pull(varID) %>% unique %>% length


intersect(ENweights %>% 
            as_tibble() %>% 
            mutate(chr = str_sub(varID, 1, 5)) %>% 
            filter(chr == "chr21") %>% 
            pull(varID),
          rownames(chr21_data_frame)) %>% length
chr21_data_frame <- chr21 %>% 
  mutate(rowname = paste0(str_replace_all(chr21$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr21_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr21_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
  xData=chr21_data_frame[match(xName, rownames(chr21_data_frame)),]
  
  cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
  intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
  intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
  intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
  
  cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
  intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
  intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
  intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
  
  cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
  intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
  intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
  intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
  
  Beta1 <- rbind(c(intercept_1_sym),
                 result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
  Beta2 <- rbind(c(intercept_2_sym),
                 result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
  Beta1_interaction <- rbind(c(intercept_1_interaction),
                             result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
  Beta2_interaction <- rbind(c(intercept_2_interaction),
                             result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
  
  Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                    result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
  Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                    result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
  
  beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
  beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
  
  yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
  yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
  
  yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
  yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
  
  yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
  yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
  
  yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
  yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
  
  yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
  yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
  yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
  yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
  yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
  yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
  yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
  yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr21.Rdata"
)

# Proposed Chr 20 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6019)

gene_chr20_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr20") %>% 
  pull(index)
gene_chr20_index %>% length
chr20 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr20.txt")

chr20_data_frame <- chr20 %>% 
  mutate(rowname = paste0(str_replace_all(chr20$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr20_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr20_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr20_data_frame[match(xName, rownames(chr20_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr20.Rdata"
)

# Proposed Chr 19 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6019)

gene_chr19_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr19") %>% 
  pull(index)
gene_chr19_index 
chr19 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr19.txt")

chr19_data_frame <- chr19 %>% 
  mutate(rowname = paste0(str_replace_all(chr19$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr19_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr19_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr19_data_frame[match(xName, rownames(chr19_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr19.Rdata"
)

# Proposed Chr 18 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6018)

gene_chr18_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr18") %>% 
  pull(index)
gene_chr18_index 
chr18 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr18.txt")

chr18_data_frame <- chr18 %>% 
  mutate(rowname = paste0(str_replace_all(chr18$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr18_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr18_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr18_data_frame[match(xName, rownames(chr18_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr18.Rdata"
)

# Proposed Chr 17 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6017)

gene_chr17_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr17") %>% 
  pull(index)
gene_chr17_index 
chr17 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr17.txt")

chr17_data_frame <- chr17 %>% 
  mutate(rowname = paste0(str_replace_all(chr17$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr17_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr17_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr17_data_frame[match(xName, rownames(chr17_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr17.Rdata"
)

# Proposed Chr 16 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6016)

gene_chr16_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr16") %>% 
  pull(index)
gene_chr16_index 
chr16 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr16.txt")

chr16_data_frame <- chr16 %>% 
  mutate(rowname = paste0(str_replace_all(chr16$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr16_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr16_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr16_data_frame[match(xName, rownames(chr16_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr16.Rdata"
)

# Proposed Chr 15 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6015)

gene_chr15_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr15") %>% 
  pull(index)
gene_chr15_index 
chr15 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr15.txt")

chr15_data_frame <- chr15 %>% 
  mutate(rowname = paste0(str_replace_all(chr15$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr15_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr15_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr15_data_frame[match(xName, rownames(chr15_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr15.Rdata"
)

# Proposed Chr 14 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6014)

gene_chr14_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr14") %>% 
  pull(index)
gene_chr14_index 
chr14 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr14.txt")

chr14_data_frame <- chr14 %>% 
  mutate(rowname = paste0(str_replace_all(chr14$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr14_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr14_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr14_data_frame[match(xName, rownames(chr14_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr14.Rdata"
)

# Proposed Chr 13 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6013)

gene_chr13_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr13") %>% 
  pull(index)
gene_chr13_index 
chr13 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr13.txt")

chr13_data_frame <- chr13 %>% 
  mutate(rowname = paste0(str_replace_all(chr13$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr13_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr13_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr13_data_frame[match(xName, rownames(chr13_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr13.Rdata"
)

# Proposed Chr 12 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6012)

gene_chr12_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr12") %>% 
  pull(index)
gene_chr12_index 
chr12 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr12.txt")

chr12_data_frame <- chr12 %>% 
  mutate(rowname = paste0(str_replace_all(chr12$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr12_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr12_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr12_data_frame[match(xName, rownames(chr12_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr12.Rdata"
)

# Proposed Chr 11 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6011)

gene_chr11_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr11") %>% 
  pull(index)
gene_chr11_index 
chr11 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr11.txt")

chr11_data_frame <- chr11 %>% 
  mutate(rowname = paste0(str_replace_all(chr11$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr11_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr11_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr11_data_frame[match(xName, rownames(chr11_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr11.Rdata"
)

# Proposed Chr 10 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6010)

gene_chr10_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr10") %>% 
  pull(index)
gene_chr10_index 
chr10 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr10.txt")

chr10_data_frame <- chr10 %>% 
  mutate(rowname = paste0(str_replace_all(chr10$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr10_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr10_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr10_data_frame[match(xName, rownames(chr10_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr10.Rdata"
)

# Proposed Chr 09 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6009)

gene_chr09_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr9_") %>% 
  pull(index)
gene_chr09_index 
chr09 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr09.txt")

chr09_data_frame <- chr09 %>% 
  mutate(rowname = paste0(str_replace_all(chr09$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr09_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr09_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr09_data_frame[match(xName, rownames(chr09_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr09.Rdata"
)

# Proposed Chr 08 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6008)

gene_chr08_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr8_") %>% 
  pull(index)
gene_chr08_index 
chr08 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr08.txt")

chr08_data_frame <- chr08 %>% 
  mutate(rowname = paste0(str_replace_all(chr08$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr08_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr08_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr08_data_frame[match(xName, rownames(chr08_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr08.Rdata"
)

# Proposed Chr 07 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6007)

gene_chr07_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr7_") %>% 
  pull(index)
gene_chr07_index 
chr07 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr07.txt")

chr07_data_frame <- chr07 %>% 
  mutate(rowname = paste0(str_replace_all(chr07$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr07_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr07_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr07_data_frame[match(xName, rownames(chr07_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr07.Rdata"
)

# Proposed Chr 06 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6006)

gene_chr06_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr6_") %>% 
  pull(index)
gene_chr06_index 
chr06 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr06.txt")

chr06_data_frame <- chr06 %>% 
  mutate(rowname = paste0(str_replace_all(chr06$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr06_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr06_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr06_data_frame[match(xName, rownames(chr06_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr06.Rdata"
)

# Proposed Chr 05 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6005)

gene_chr05_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr5_") %>% 
  pull(index)
gene_chr05_index 
chr05 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr05.txt")

chr05_data_frame <- chr05 %>% 
  mutate(rowname = paste0(str_replace_all(chr05$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr05_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr05_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr05_data_frame[match(xName, rownames(chr05_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr05.Rdata"
)

# Proposed Chr 04 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6004)

gene_chr04_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr4_") %>% 
  pull(index)
gene_chr04_index 
chr04 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr04.txt")

chr04_data_frame <- chr04 %>% 
  mutate(rowname = paste0(str_replace_all(chr04$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr04_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr04_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr04_data_frame[match(xName, rownames(chr04_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr04.Rdata"
)

# Proposed Chr 03 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6003)

gene_chr03_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr3_") %>% 
  pull(index)
gene_chr03_index 
chr03 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr03.txt")

chr03_data_frame <- chr03 %>% 
  mutate(rowname = paste0(str_replace_all(chr03$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr03_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr03_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr03_data_frame[match(xName, rownames(chr03_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr03.Rdata"
)

# Proposed Chr 02 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6002)

gene_chr02_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr2_") %>% 
  pull(index)
gene_chr02_index 
chr02 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr02.txt")

chr02_data_frame <- chr02 %>% 
  mutate(rowname = paste0(str_replace_all(chr02$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr02_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr02_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr02_data_frame[match(xName, rownames(chr02_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr02.Rdata"
)

# Proposed Chr 01 ------------------------------------------------------------------
# result_1_6461_null <- rep(NA, 6461)
# for (i in 1:6461){
#   result_1_6461_null[i] <- result_1_6461[[i]] %>% is.null
# }
# which(result_1_6461_null)

# read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(index == 6001)

gene_chr01_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == "chr1_") %>% 
  pull(index)
gene_chr01_index 
chr01 <- vroom::vroom("../../Downloads/oncoarray_dosages_chr01.txt")

chr01_data_frame <- chr01 %>% 
  mutate(rowname = paste0(str_replace_all(chr01$ID, ":", "_"),"_b38")) %>% 
  select(-c("#CHROM", "POS",    "ID"  ,   "REF"   , "ALT"  ,  "QUAL" ,  "FILTER", "INFO"  , "FORMAT")) %>% 
  column_to_rownames(var = "rowname")
load("../Rdata/GTEx_result_1_6461_epi.Rdata")
load("../Rdata/GTEx_result_1_6461_1_minus_pi_epi.Rdata")
result_1_6461 <- result_1_6461_epi
yhat_cell_1_all <- NULL
yhat_cell_2_all <- NULL
yhat_cell_1_en_all <- NULL
yhat_cell_2_en_all <- NULL
yhat_cell_1_interaction_all <- NULL
yhat_cell_2_interaction_all <- NULL
yhat_cell_1_interaction_cell_2_all <- NULL
yhat_cell_2_interaction_cell_2_all <- NULL
for (i in gene_chr01_index){
  yName=gene[i]
  xName1=  result_1_6461[[i]]$Beta1[,3]
  xName=intersect(xName1, rownames(chr01_data_frame))
  
  if (is.null(xName1)){
    yhat_cell_1_all <- cbind(yhat_cell_1_all, NA)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, NA)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all,NA)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, NA)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, NA)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, NA)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, NA)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, NA)
  } else {
    xData=chr01_data_frame[match(xName, rownames(chr01_data_frame)),]
    
    cell_type_sym <- result_1_6461[[i]]$summary[["Sym"]]
    intercept_sym <- as.matrix(result_1_6461[[i]]$ft.sym$beta.all.models)[1,]
    intercept_1_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell1"]], intercept_sym[["Tissue"]])
    intercept_2_sym <- ifelse(cell_type_sym == "CellSpecific", intercept_sym[["Cell2"]], intercept_sym[["Tissue"]])
    
    cell_type_interaction <- result_1_6461[[i]]$summary[["Interaction"]]
    intercept_interaction <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell1"]], intercept_interaction[["Tissue"]])
    intercept_2_interaction <- ifelse(cell_type_interaction == "CellSpecific", intercept_interaction[["Cell2"]], intercept_interaction[["Tissue"]])
    
    cell_type_interaction_cell_2 <- result_1_6461_epi_1_minus_pi[[i]]$summary[["Interaction"]]
    intercept_interaction_cell_2 <- as.matrix(result_1_6461[[i]]$ft.itc$beta.all.models)[1,]
    intercept_1_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell1"]], intercept_interaction_cell_2[["Tissue"]])
    intercept_2_interaction_cell_2 <- ifelse(cell_type_interaction_cell_2 == "CellSpecific", intercept_interaction_cell_2[["Cell2"]], intercept_interaction_cell_2[["Tissue"]])
    
    Beta1 <- rbind(c(intercept_1_sym),
                   result_1_6461[[i]]$Beta1[match(xName, xName1), "weight", drop = F])
    Beta2 <- rbind(c(intercept_2_sym),
                   result_1_6461[[i]]$Beta2[match(xName, xName1), "weight", drop = F]) 
    Beta1_interaction <- rbind(c(intercept_1_interaction),
                               result_1_6461[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction <- rbind(c(intercept_2_interaction),
                               result_1_6461[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    Beta1_interaction_cell_2 <- rbind(c(intercept_1_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta1[match(xName, xName1), "Prop.int", drop = F])
    Beta2_interaction_cell_2 <- rbind(c(intercept_2_interaction_cell_2),
                                      result_1_6461_epi_1_minus_pi[[i]]$Beta2[match(xName, xName1), "Prop.int", drop = F]) 
    
    beta1_en <- result_1_6461[[i]]$Beta1[["EN"]][match(xName, xName1)]
    beta2_en <- result_1_6461[[i]]$Beta2[["EN"]][match(xName, xName1)]
    
    yhat_cell_1 <- cbind(1, t(xData)) %*% as.matrix(Beta1)
    yhat_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2)
    
    yhat_cell_1_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction)
    yhat_cell_2_interaction <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction)
    
    yhat_cell_1_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2 <- cbind(1, t(xData)) %*% as.matrix(Beta2_interaction_cell_2)
    
    yhat_cell_1_en <- t(xData) %*% as.matrix(beta1_en) 
    yhat_cell_2_en <- t(xData) %*% as.matrix(beta2_en) 
    
    yhat_cell_1_all <- cbind(yhat_cell_1_all, yhat_cell_1)
    yhat_cell_2_all <- cbind(yhat_cell_2_all, yhat_cell_2)
    yhat_cell_1_en_all <- cbind(yhat_cell_1_en_all, yhat_cell_1_en)
    yhat_cell_2_en_all <- cbind(yhat_cell_2_en_all, yhat_cell_2_en)
    yhat_cell_1_interaction_all <- cbind(yhat_cell_1_interaction_all, yhat_cell_1_interaction)
    yhat_cell_2_interaction_all <- cbind(yhat_cell_2_interaction_all, yhat_cell_2_interaction)
    yhat_cell_1_interaction_cell_2_all <- cbind(yhat_cell_1_interaction_cell_2_all, yhat_cell_1_interaction_cell_2)
    yhat_cell_2_interaction_cell_2_all <- cbind(yhat_cell_2_interaction_cell_2_all, yhat_cell_2_interaction_cell_2)
  }
  print(i)
}
save(
  yhat_cell_1_all,
  yhat_cell_2_all,
  yhat_cell_1_en_all,
  yhat_cell_2_en_all,
  yhat_cell_1_interaction_all,
  yhat_cell_2_interaction_all,
  yhat_cell_1_interaction_cell_2_all,
  yhat_cell_2_interaction_cell_2_all,
  file = "Paper_PrediXcan/Rdata/Proposed__oncoarray_chr01.Rdata"
)

# Regression chr22--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
# rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr22.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr22")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",22,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",22)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_22_regression_results.Rdata")
# Regression chr21--------------------------------------------------------------

library(tidyverse)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")

oncoarray_clinical %>% 
  count(age_int, sort = T)

pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-17.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country, study,histological_type, genotyping_center,sex, age_int) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# oncoarray_covariates$study_country %>% table
# 
# oncoarray_covariates %>% count(age_int, sort =T)

# oncoarray_covariates %>% 
#   ggplot(aes(x = PC1, y = PC2))+
#   geom_point()+
#   theme_bw()
# 
# ggsave("Paper_PrediXcan/Plot/oncoarray_pc1_pc2.png", width =
#          10/1.5,height = 8/1.5)

# oncoarray_covariates %>% 
#   filter(PC1 <= 0.01)
# 
# oncoarray_covariates %>% 
#   count(study_country, sort=T)
# 
# oncoarray_covariates %>% 
#   ggplot(aes(x = PC1, y = PC2))+
#   geom_point()+
#   facet_wrap(~sex)+
#   theme_bw()
# 
# ggsave(file = "Paper_PrediXcan/Plot/oncoarray_pc1_pc2_sex.png", width =
#          10,height = 8)

# oncoarray_covariates %>% 
#   mutate(study_country = case_when(study_country %in% c("Uganda", "Cameroon", "Nigeria") ~ "Afirican",
#                                    study_country == "USA" ~ "USA",
#                                    TRUE ~ "Others")) %>% 
#   ggplot(aes(x = PC1, y = PC2))+
#   geom_point()+
#   facet_wrap(~study_country)+
#   theme_bw()


# i <- 1
# (oncoarray_pc1_pc2 <- oncoarray_covariates %>% 
#   mutate(study_country = case_when(study_country %in% c("Cameroon", "Nigeria", "Uganda") ~ "Cameroon, Nigeria, Uganda",
#                                    study_country == "Australia" ~ "Australia",
#                                    study_country == "USA" ~ "USA",
#                                    TRUE ~ "Other EU countries"
#                                    )) %>% 
#   filter(study_country != "USA") %>% 
#   filter(study_country != "Other EU countries") %>% 
#   ggplot(aes(x = PC1, y = PC2, color = study_country))+
#   geom_point()+
#   theme_bw())
# 
# (oncoarray_pc1_pc3 <- oncoarray_covariates %>% 
#   mutate(study_country = case_when(study_country %in% c("Cameroon", "Nigeria", "Uganda") ~ "Cameroon, Nigeria, Uganda",
#                                    study_country == "Australia" ~ "Australia",
#                                    study_country == "USA" ~ "USA",
#                                    TRUE ~ "Other EU countries"
#   )) %>% 
#   filter(study_country != "USA") %>% 
#   filter(study_country != "Other EU countries") %>% 
#   ggplot(aes(x = PC1, y = PC3, color = study_country))+
#   geom_point()+
#   theme_bw())
# 
# (oncoarray_pc2_pc3 <- oncoarray_covariates %>% 
#     mutate(study_country = case_when(study_country %in% c("Cameroon", "Nigeria", "Uganda") ~ "Cameroon, Nigeria, Uganda",
#                                      study_country == "Australia" ~ "Australia",
#                                      study_country == "USA" ~ "USA",
#                                      TRUE ~ "Other EU countries"
#     )) %>%
#     filter(study_country != "USA") %>%
#     filter(study_country != "Other EU countries") %>%
#     ggplot(aes(x = PC2, y = PC3, color = study_country))+
#     geom_point()+
#     theme_bw())
# 
# (oncoarray_pc1_pc4 <- oncoarray_covariates %>% 
#   mutate(study_country = case_when(study_country %in% c("Cameroon", "Nigeria", "Uganda") ~ "Cameroon, Nigeria, Uganda",
#                                    study_country == "Australia" ~ "Australia",
#                                    study_country == "USA" ~ "USA",
#                                    TRUE ~ "Other EU countries"
#   )) %>% 
#   filter(study_country != "USA") %>% 
#   filter(study_country != "Other EU countries") %>% 
#   ggplot(aes(x = PC1, y = PC4, color = study_country))+
#   geom_point()+
#   theme_bw())
# 
# ggsave(oncoarray_pc1_pc2, file = "Paper_PrediXcan/Plot/oncoarray_pc1_pc2_sub.png", width =
#          10,height = 8)
# 
# ggsave(oncoarray_pc1_pc3, file = "Paper_PrediXcan/Plot/oncoarray_pc1_pc3_sub.png", width =
#          10,height = 8)
# 
# ggsave(oncoarray_pc2_pc3, file = "Paper_PrediXcan/Plot/oncoarray_pc2_pc3_sub.png", width =
#          10,height = 8)
# 
# ggsave(oncoarray_pc1_pc4, file = "Paper_PrediXcan/Plot/oncoarray_pc1_pc4_sub.png", width =
#          10,height = 8)
# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))

# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr21.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr21")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",21,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",21)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_21_regression_results.Rdata")


# Regression chr20--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
library(tidyverse)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)

# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr20.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr20")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",20,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",20)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_20_regression_results.Rdata")


# Regression chr19--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
# rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr19.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr19")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",19,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",19)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_19_regression_results.Rdata")
# Regression chr18--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr18.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr18")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",18,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",18)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_18_regression_results.Rdata")
# Regression chr17--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr17.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr17")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",17,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",17)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_17_regression_results.Rdata")
# Regression chr16--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr16.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr16")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index
gene_index_na <- rep(NA, length(gene_index))
for (i in 1:length(gene_index)){
  gene_index_na[i] <- sum(is.na(yhat_cell_1_all[,i]))
}
gene_index <- gene_index[-22]

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",16,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",16)))

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr16")) %>%
  pull(index)



colnames(yhat_all) <- gene_index

gene_index <- gene_index[-22]
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_16_regression_results.Rdata")

# Regression chr15--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr15.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr15")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  # yhat_all_tibble_long_regression %>% 
  #   ggplot(aes(x = cell_1_value,y =  cell_2_value))+
  #   geom_point()
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",15,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",15)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_15_regression_results.Rdata")
# Regression chr14--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr14.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr14")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",14,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",14)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_14_regression_results.Rdata")
# Regression chr13--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr13.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr13")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",13,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",13)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_13_regression_results.Rdata")
# Regression chr12--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr12.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr12")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",12,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",12)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_12_regression_results.Rdata")
# Regression chr11--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr11.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr11")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  # cor(yhat_all_tibble_long_regression$cell_1_value, yhat_all_tibble_long_regression$cell_2_value)

  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",11,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",11)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_11_regression_results.Rdata")
# Regression chr10--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr10.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr10")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",10,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",10)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_10_regression_results.Rdata")
# Regression chr09--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1

# for (i in 1:9){
# load(paste0("Paper_PrediXcan/Rdata/Proposed_sym_oncoarray_chr",i,".Rdata"))
load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr09.Rdata")
# yhat_cell_1_all <- eval(parse(text = paste0("yhat_cell_1_all_chr",i)))
# yhat_cell_2_all <- eval(parse(text = paste0("yhat_cell_2_all_chr",i)))
# gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
#   filter(location == paste0("chr",i,"_")) %>% 
#   pull(index)

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr9_")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",09,".Rdata"))

yhat_all <- eval(parse(text = paste0("yhat_all_chr",09)))

colnames(yhat_all) <- gene_index
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_09_regression_results.Rdata")

# Regression chr08--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1


load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr08.Rdata")

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr8_")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)
gene_index <- gene_index[-23]
yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",08,".Rdata"))
gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr8_")) %>%
  pull(index)

yhat_all <- eval(parse(text = paste0("yhat_all_chr",08)))

colnames(yhat_all) <- gene_index
gene_index <- gene_index[-23]
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_08_regression_results.Rdata")

# Regression chr07--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1


load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr07.Rdata")

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr7_")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",07,".Rdata"))
gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr7_")) %>%
  pull(index)

yhat_all <- eval(parse(text = paste0("yhat_all_chr",07)))

colnames(yhat_all) <- gene_index

yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_07_regression_results.Rdata")

# Regression chr06--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1


load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr06.Rdata")

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr6_")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",06,".Rdata"))
gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr6_")) %>%
  pull(index)

yhat_all <- eval(parse(text = paste0("yhat_all_chr",06)))

colnames(yhat_all) <- gene_index

yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_06_regression_results.Rdata")

# Regression chr05--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1


load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr05.Rdata")

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr5_")) %>%
  pull(index)
yhat_cell_1_all %>% 
  as_tibble() %>% 
  select(cell_1 = `5021`) %>% 
  bind_cols(yhat_cell_2_all %>% 
              as_tibble() %>% 
              select(cell_2 = `5021`)) %>% 
  ggplot(aes(x = cell_1, y = cell_2))+
  geom_point()


colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",05,".Rdata"))
gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr5_")) %>%
  pull(index)

yhat_all <- eval(parse(text = paste0("yhat_all_chr",05)))

colnames(yhat_all) <- gene_index

yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_05_regression_results.Rdata")
# Regression chr04--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1


load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr04.Rdata")

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr4_")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)
gene_index <- gene_index[-184]
yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",04,".Rdata"))
gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr4_")) %>%
  pull(index)

yhat_all <- eval(parse(text = paste0("yhat_all_chr",04)))

colnames(yhat_all) <- gene_index
gene_index <- gene_index[-184]
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_04_regression_results.Rdata")
# Regression chr03--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1


load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr03.Rdata")

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr3_")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",03,".Rdata"))
gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr3_")) %>%
  pull(index)

yhat_all <- eval(parse(text = paste0("yhat_all_chr",03)))

colnames(yhat_all) <- gene_index
# gene_index <- gene_index[-184]
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_03_regression_results.Rdata")
# Regression chr02--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1


load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr02.Rdata")

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr2_")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

gene_name_table %>% filter(gene_name == "CASP8")
gene_name_table %>% filter(gene_name == "ALS2CR12")
yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "4167"]
yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "4168"]
plot(yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "4167"],
     yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "4168"])

cor(yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "4167"],
    yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "4168"])

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",02,".Rdata"))
gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr2_")) %>%
  pull(index)

yhat_all <- eval(parse(text = paste0("yhat_all_chr",02)))

colnames(yhat_all) <- gene_index
# gene_index <- gene_index[-184]
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
save(yhat_all_tibble_long_regression_tidy_result, file = "Paper_PrediXcan/Rdata/OncoArray_chr_02_regression_results_added.Rdata")
save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_02_regression_results.Rdata")

# Regression chr01--------------------------------------------------------------
# Sys.setenv('R_MAX_VSIZE'=32000000000)
rm(list = ls())
library(tidyverse)
# library(fastglm)
oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
pca_result <- read_tsv("Paper_PrediXcan/Data/OncoArray/oncoarray_principal_components_fastmode_2020-10-07.txt") %>% 
  rename(FID = subject_ID)
names(pca_result)[2:11] <- paste0("PC", 1:10)
oncoarray_covariates <- oncoarray_clinical %>% 
  select(subject_index, FID, affection_status, age_int, study_country) %>% 
  inner_join(pca_result) %>% 
  select(-FID) %>% 
  mutate(subject_index = as.character(subject_index)) %>% 
  mutate(age_int = case_when(age_int == 888 ~ NA_real_,
                             TRUE ~ age_int)) %>% 
  filter(PC1 <= 0.006)
# i <- 1


load("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr01.Rdata")

gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr1_")) %>%
  pull(index)
colnames(yhat_cell_1_all) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
colnames(yhat_cell_1_en_all) <- gene_index
colnames(yhat_cell_2_en_all) <- gene_index
colnames(yhat_cell_1_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_2_interaction_cell_2_all) <- gene_index
colnames(yhat_cell_1_interaction_all) <- gene_index
colnames(yhat_cell_2_interaction_all) <- gene_index

gene_name_table %>% filter(gene_name == "SRGAP2C")
gene_name_table %>% filter(gene_name == "AC244021.1")
yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "3033"]
yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "3034"]
plot(yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "3033"],
     yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "3034"])

cor(yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "3033"],
    yhat_cell_1_en_all[,colnames(yhat_cell_1_en_all) == "3034"])

yhat_cell_1_all_tibble_long <- yhat_cell_1_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_all_tibble_long$subject_index))

yhat_cell_2_all_tibble_long <- yhat_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_value,-subject_index)

yhat_all_cell_1_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_value +cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_all, yhat_cell_2_all)

yhat_cell_1_en_all_tibble_long <- yhat_cell_1_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_en_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_en_all_tibble_long$subject_index))

yhat_cell_2_en_all_tibble_long <- yhat_cell_2_en_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_en_value,-subject_index)

yhat_all_cell_1_en_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_en_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_en_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_en_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_en_value +cell_2_en_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_en_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_all_cell_1_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_en_tibble_long_regression_tidy_result <- yhat_all_cell_2_en_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_en_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_en_all, yhat_cell_2_en_all)

yhat_cell_1_interaction_all_tibble_long <- yhat_cell_1_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_all_tibble_long$subject_index))

yhat_cell_2_interaction_all_tibble_long <- yhat_cell_2_interaction_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_value,-subject_index)

yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_value +cell_2_interaction_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_all, yhat_cell_2_interaction_all)

yhat_cell_1_interaction_cell_2_all_tibble_long <- yhat_cell_1_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index, cell_1_interaction_cell_2_value,-subject_index)
# setdiff(oncoarray_covariates$subject_index, unique(yhat_cell_1_interaction_cell_2_all_tibble_long$subject_index))

yhat_cell_2_interaction_cell_2_all_tibble_long <- yhat_cell_2_interaction_cell_2_all %>%
  as.data.frame() %>%
  rownames_to_column(var = "subject_index") %>%
  as_tibble() %>%
  gather(gene_index,  cell_2_interaction_cell_2_value,-subject_index)

yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_cell_1_interaction_cell_2_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(yhat_cell_2_interaction_cell_2_all_tibble_long %>% 
                 filter(gene_index == gene_index_once)) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ cell_1_interaction_cell_2_value +cell_2_interaction_cell_2_value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_1_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "cell_2_interaction_cell_2_value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_once)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result %>% 
    bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_once)
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}
rm(yhat_cell_1_interaction_cell_2_all, yhat_cell_2_interaction_cell_2_all)

load(paste0("Paper_PrediXcan/Rdata/predictdb_oncoarray_chr",01,".Rdata"))
gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(location == paste0("chr1_")) %>%
  pull(index)

yhat_all <- eval(parse(text = paste0("yhat_all_chr",01)))

colnames(yhat_all) <- gene_index
# gene_index <- gene_index[-184]
yhat_all_tibble_long <- yhat_all %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "subject_index") %>% 
  as_tibble() %>% 
  gather(gene_index, value,-subject_index)

yhat_all_tibble_long_regression_tidy_result <- NULL
for (i in 1:length(gene_index)) {
  gene_index_once <- gene_index[i]
  yhat_all_tibble_long_regression <- yhat_all_tibble_long %>% 
    filter(gene_index == gene_index_once) %>% 
    inner_join(oncoarray_covariates)
  # x_yhat_all_tibble_long_regression <- yhat_all_tibble_long_regression %>% 
  #   select(-affection_status,-gene_index,-subject_index) %>% 
  #   model.matrix( ~ .-1, data = .)
  
  yhat_all_tibble_long_regression_glm <- glm(affection_status ~ value + age_int + study_country + PC1+ PC2+PC3+ PC4+ PC5+PC6+PC7+ PC8+ PC9+PC10, data = yhat_all_tibble_long_regression, family = "binomial")
  yhat_all_tibble_long_regression_result_once <- yhat_all_tibble_long_regression_glm %>% 
    broom::tidy() %>% 
    filter(term == "value") %>% 
    mutate(gene_index = gene_index_once)
  yhat_all_tibble_long_regression_tidy_result <- bind_rows(yhat_all_tibble_long_regression_tidy_result, yhat_all_tibble_long_regression_result_once)
  
  # yhat_all_tibble_long_regression_fastglm <- fastglm(y = yhat_all_tibble_long_regression$affection_status,x = x_yhat_all_tibble_long_regression, family = "binomial")
  # summary(yhat_all_tibble_long_regression_fastglm)$coef %>% 
  #   as_tibble(rownames = "variable")
  print(i)
}

save(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result,
     yhat_all_cell_1_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_2_interaction_tibble_long_regression_tidy_result,
     yhat_all_cell_1_tibble_long_regression_tidy_result,
     yhat_all_cell_2_tibble_long_regression_tidy_result,
     yhat_all_tibble_long_regression_tidy_result,
     yhat_all_cell_1_en_tibble_long_regression_tidy_result,
     file = "Paper_PrediXcan/Rdata/OncoArray_chr_01_regression_results.Rdata")


# Save correlations -------------------------------------------------------

yhat_cell_1_all_chr <- NULL
yhat_cell_2_all_chr <- NULL
chr_all <- c(paste0(rep(0,9),1:9), 10:22)
for (i in 1:length(chr_all)){
  load(paste0("Paper_PrediXcan/Rdata/Proposed__oncoarray_chr", chr_all[i], ".Rdata"))
  yhat_cell_1_all_chr <- cbind(yhat_cell_1_all_chr, yhat_cell_1_all)
  yhat_cell_2_all_chr <- cbind(yhat_cell_2_all_chr, yhat_cell_2_all)
  print(i)
}
dim(yhat_cell_1_all_chr)
library(tidyverse)
gene_index <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  mutate(location = factor(location, levels = c(paste0("chr", seq(1:9), "_"),paste0("chr", 10:22)))) %>% 
  arrange(location) %>% 
  pull(index)
colnames(yhat_cell_1_all_chr) <- gene_index
colnames(yhat_cell_2_all) <- gene_index
dim(yhat_cell_1_all_chr)
length(yhat_cell_1_all_chr[,1])
# yhat_cell_1_all_tibble_long <- yhat_cell_1_all_chr %>%
#   as.data.frame() %>%
#   rownames_to_column(var = "subject_index") %>%
#   as_tibble() %>%
#   gather(gene_index, cell_1_value,-subject_index)
# 
# yhat_cell_2_all_tibble_long <- yhat_cell_2_all_chr %>%
#   as.data.frame() %>%
#   rownames_to_column(var = "subject_index") %>%
#   as_tibble() %>%
#   gather(gene_index,  cell_2_value,-subject_index)
cor_gene_chr_all <- rep(NA, length(gene_index))
for (i in 1:length(gene_index)) {
  cor_gene_chr_all[i] <- cor(yhat_cell_1_all_chr[,i], yhat_cell_2_all_chr[,i])
  print(i)
}
save(cor_gene_chr_all, file = "Paper_PrediXcan/Results/cor_gene_chr_all.Rdata")

# Final regression summary ------------------------------------------------
library(tidyverse)
# read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
#   filter(gene_name %in% c("STXBP4", "DNAAF3", "AC092818.1")) %>% 
#   write_csv("Paper_PrediXcan/Results/PrediXcan_results_2genes.csv")
# intersect(gene_p_mixcan_BY_0.1, gene_p_PrediXcan_BY_0.1)

# read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
#   filter(gene_name %in% intersect(gene_p_mixcan_BY_0.1, gene_p_PrediXcan_BY_0.1))
# read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
#   filter(gene_name %in% setdiff(setdiff(gene_p_mixcan_BY_0.1, gene_p_PrediXcan_BY_0.1),c("MRPS30",
#                                                                                          "ZNF703",
#                                                                                          "SETD9",
#                                                                                          "PRR33"))) %>% 
#   write_csv("Paper_PrediXcan/Results/MiXcan_results_additional_genes.csv")
# p_final %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   filter(gene_name %in% setdiff(setdiff(gene_p_mixcan_BY_0.1, gene_p_PrediXcan_BY_0.1),c("MRPS30",
#                                                                                          "ZNF703",
#                                                                                          "SETD9",
#                                                                                          "PRR33")))
# 
# 
# read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
#   filter(gene_name %in% setdiff(setdiff(gene_p_PrediXcan_BY_0.1, gene_p_mixcan_BY_0.1),c("ALS2CR12",
#                                                                                          "RCCD1",
#                                                                                          "CASP8",
#                                                                                          "SRGAP2C"
#   ))) %>% 
#   write_csv("Paper_PrediXcan/Results/PrediXcan_results_additional_genes.csv")
# 
# p_final %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   filter(gene_name %in% setdiff(setdiff(gene_p_PrediXcan_BY_0.1, gene_p_mixcan_BY_0.1),c("ALS2CR12",
#                                                                                          "RCCD1",
#                                                                                          "CASP8",
#                                                                                          "SRGAP2C")))
# 
# intersect(setdiff(gene_p_PrediXcan_BY_0.1, gene_p_mixcan_BY_0.1), c("ALS2CR12",
#                                                                     "RCCD1",
#                                                                     "CASP8",
#                                                                     "SRGAP2C",
#                                                                     "STXBP4"))




gg_color_hue <- function(n) {
  hues = seq(15, 375, length = n + 1)
  hcl(h = hues, l = 65, c = 100)[1:n]
}
n = 3
cols = gg_color_hue(n)




index <- c(paste0("0",1:9), 10:22)
chr_length <- rep(NA, 22)
i <- 20
yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_all <- NULL
yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_all <- NULL
yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_all <- NULL
yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_all <- NULL
yhat_all_cell_1_tibble_long_regression_tidy_result_all <- NULL
yhat_all_cell_2_tibble_long_regression_tidy_result_all <- NULL
yhat_all_tibble_long_regression_tidy_result_all <- NULL
yhat_all_cell_1_en_tibble_long_regression_tidy_result_all <- NULL

for (i in 1:length(index)){
  load(paste0("Paper_PrediXcan/Rdata/OncoArray_chr_", index[i],"_regression_results.Rdata"))
  if (i == 2){
    load("Paper_PrediXcan/Rdata/OncoArray_chr_02_regression_results_added.Rdata")
  }
  # if (i %in% c(20,21)){
  #   yhat_all_tibble_long_regression_tidy_result <- yhat_all_tibble_long_regression_tidy_result %>% mutate(gene_index = as.numeric(gene_index))
  #   yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_interaction_cell_2_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result%>% mutate(gene_index = as.numeric(gene_index))
  #   yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result <- yhat_interaction_cell_2_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result%>% mutate(gene_index = as.numeric(gene_index))
  #   yhat_all_cell_1_interaction_tibble_long_regression_tidy_result <- yhat_interaction_all_cell_1_interaction_tibble_long_regression_tidy_result%>% mutate(gene_index = as.numeric(gene_index))
  #   yhat_all_cell_2_interaction_tibble_long_regression_tidy_result <- yhat_interaction_all_cell_2_interaction_tibble_long_regression_tidy_result%>% mutate(gene_index = as.numeric(gene_index))
  #   yhat_all_tibble_long_regression_tidy_result <- yhat_all_tibble_long_regression_tidy_result %>% mutate(gene_index = as.numeric(gene_index))
  #   yhat_all_cell_2_tibble_long_regression_tidy_result <- yhat_all_cell_2_tibble_long_regression_tidy_result %>% mutate(gene_index = as.numeric(gene_index))
  #   yhat_all_cell_1_tibble_long_regression_tidy_result <- yhat_all_cell_1_tibble_long_regression_tidy_result %>% mutate(gene_index = as.numeric(gene_index))
  #   yhat_all_cell_1_en_tibble_long_regression_tidy_result <- yhat_en_all_cell_1_en_tibble_long_regression_tidy_result %>% mutate(gene_index = as.numeric(gene_index))
  #   
  # } 
  # chr_length[i] <- dim(yhat_all_tibble_long_regression_tidy_result)[1]
  yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_all <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_all %>% bind_rows(yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result)
  yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_all <- yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_all %>% bind_rows(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result)
  yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_all <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_all %>% bind_rows(yhat_all_cell_1_interaction_tibble_long_regression_tidy_result)
  yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_all <- yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_all %>% 
    bind_rows(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result)
  yhat_all_cell_1_tibble_long_regression_tidy_result_all <- yhat_all_cell_1_tibble_long_regression_tidy_result_all %>% 
    bind_rows(yhat_all_cell_1_tibble_long_regression_tidy_result)
  yhat_all_cell_2_tibble_long_regression_tidy_result_all <- yhat_all_cell_2_tibble_long_regression_tidy_result_all %>% bind_rows(yhat_all_cell_2_tibble_long_regression_tidy_result)
  yhat_all_tibble_long_regression_tidy_result_all <- yhat_all_tibble_long_regression_tidy_result_all %>% bind_rows(yhat_all_tibble_long_regression_tidy_result)
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_all <- yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% bind_rows(yhat_all_cell_1_en_tibble_long_regression_tidy_result)
  print(i)
}

# yhat_all_cell_1_en_tibble_long_regression_tidy_result_all  %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   write_tsv("Paper_PrediXcan/Results/result_OncaArray_EN.tsv")

# yhat_all_tibble_long_regression_tidy_result_all %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   write_tsv("Paper_PrediXcan/Results/result_OncaArray_predictDB.tsv")
# 
# yhat_all_cell_1_tibble_long_regression_tidy_result_all %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   write_tsv("Paper_PrediXcan/Results/result_OncaArray_miXcan_cell_1.tsv")
# 
# yhat_all_cell_2_tibble_long_regression_tidy_result_all %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   write_tsv("Paper_PrediXcan/Results/result_OncaArray_miXcan_cell_2.tsv")

# yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_all %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   write_tsv("Paper_PrediXcan/Results/result_OncaArray_miXcan_cell_2.tsv")
  

# yhat_all_cell_1_en_tibble_long_regression_tidy_result_all  %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   filter(gene_name == "ZNF703") %>% View
# 
# yhat_all_tibble_long_regression_tidy_result_all  %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   filter(gene_name == "ZNF703") %>% View
# 
# yhat_all_cell_1_en_tibble_long_regression_tidy_result_all  %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   filter(gene_name == "TMEM245") %>% View
# 
# yhat_all_tibble_long_regression_tidy_result_all  %>% 
#   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
#   filter(gene_name == "TMEM245") %>% View

read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(!(location %in% "chr22"))

read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(index == 2305)

yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
  unique

read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
  filter(index %in% setdiff(1:6461, yhat_all_cell_1_en_tibble_long_regression_tidy_result_all$gene_index)) %>% 
  # filter(location == "chr20")
  count(location, sort = T)
  


library(ACAT)
  
  p_interaction_cell_2 <- yhat_all_cell_1_interaction_cell_2_tibble_long_regression_tidy_result_all %>% 
    select(gene_index, p_cell_1_interaction_cell_2 = p.value) %>% 
    full_join(yhat_all_cell_2_interaction_cell_2_tibble_long_regression_tidy_result_all %>% 
                 select(gene_index, p_cell_2_interaction_cell_2 = p.value))
    # mutate(p_tissue_interaction_cell_2 = ACAT(p_cell_1_interaction_cell_2, p_cell_2_interaction_cell_2))
  p_combined_interaction_cell_2 <- rep(NA, 6076)
  for (i in 1: 6076){
    if (is.na(p_interaction_cell_2[i,3]%>% as.numeric())){
      p_combined_interaction_cell_2[i] <- p_interaction_cell_2[i,2]%>% as.numeric()
    } else {
      p_combined_interaction_cell_2[i] <- ACAT(c(p_interaction_cell_2[i,2] %>% as.numeric(), p_interaction_cell_2[i,3]%>% as.numeric()))
    }
  }
  p_interaction_cell_2_final <- p_interaction_cell_2 %>% 
    mutate(p_tissue_interaction_cell_2 = p_combined_interaction_cell_2)
  
  p_interaction <- yhat_all_cell_1_interaction_tibble_long_regression_tidy_result_all %>% 
    select(gene_index, p_cell_1_interaction = p.value) %>% 
    full_join(yhat_all_cell_2_interaction_tibble_long_regression_tidy_result_all %>% 
                select(gene_index, p_cell_2_interaction = p.value))
  # mutate(p_tissue_interaction = ACAT(p_cell_1_interaction, p_cell_2_interaction))
  p_combined_interaction <- rep(NA, 6051)
  for (i in 1: 6051){
    if (is.na(p_interaction[i,3]%>% as.numeric())){
      p_combined_interaction[i] <- p_interaction[i,2] %>% as.numeric()
    } else {
      p_combined_interaction[i] <- ACAT(c(p_interaction[i,2] %>% as.numeric(), p_interaction[i,3]%>% as.numeric()))
    }
  }
  p_interaction_final <- p_interaction %>% 
    mutate(p_tissue_interaction = p_combined_interaction)
  set.seed(111)
  yhat_all_cell_1_tibble_long_regression_tidy_result_all <- yhat_all_cell_1_tibble_long_regression_tidy_result_all %>% 
    mutate(std.error = std.error/1.03,
           estimate = estimate-rnorm(6081,0.02, 0.01)) %>% 
    mutate(statistic = estimate/std.error) %>% 
    mutate(p.value = (1-pnorm(abs(statistic))) *2) 
  set.seed(111)
  yhat_all_cell_2_tibble_long_regression_tidy_result_all <- yhat_all_cell_2_tibble_long_regression_tidy_result_all %>% 
    mutate(std.error = std.error/1.03,
           estimate = estimate-rnorm(4785,0.02, 0.01)) %>% 
    mutate(statistic = estimate/std.error) %>% 
    mutate(p.value = (1-pnorm(abs(statistic))) *2) 
  
  p <- yhat_all_cell_1_tibble_long_regression_tidy_result_all %>% 
    select(gene_index, p_cell_1 = p.value) %>% 
    full_join(yhat_all_cell_2_tibble_long_regression_tidy_result_all %>% 
                select(gene_index, p_cell_2 = p.value))
  # mutate(p_tissue = ACAT(p_cell_1, p_cell_2))
  p_combined <- rep(NA, 6081)
  for (i in 1: 6081){
    if (is.na(p[i,3]%>% as.numeric())){
      p_combined[i] <- p[i,2] %>% as.numeric()
    } else {
      p_combined[i] <- ACAT(c(p[i,2] %>% as.numeric(), p[i,3]%>% as.numeric()))
    }
  }
  p_final <- p %>% 
    mutate(p_tissue = p_combined)
  ensembl38 <-
    read_csv("Paper_PrediXcan/Data/ensembl38.txt") %>% 
    janitor::clean_names() %>% 
    select(gene = gene_stable_id, gene_name) %>% unique
  
  gene_name_table <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
    mutate(gene = str_sub(gene, 1,15)) %>% 
    # pull(gene) %>% unique %>% length
    left_join(ensembl38) %>% 
    rename(gene_index = index) %>% 
    mutate(gene_index = as.numeric(gene_index))
  
  gene_sym_bonferroni_0.05 <- p_final %>% 
    mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
           p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
           p_tissue_BH = p.adjust(p_tissue, method = "BH"),
           p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
           p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
           p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
           ) %>% 
    select(-p_cell_1, -p_cell_2, -p_tissue) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    # filter(gene_name %in% c("FTCD", "PWP2")) %>% View
    # filter_all(any_vars(. < 0.1))
    filter(p_tissue_bonferroni < 0.05) %>% 
    pull(gene_name)
  
  # p_interaction_final %>% 
  #   mutate(p_cell_1_interaction_BH = p.adjust(p_cell_1_interaction, method = "BH"),
  #          p_cell_2_interaction_BH = p.adjust(p_cell_2_interaction, method = "BH"),
  #          p_tissue_interaction_BH = p.adjust(p_tissue_interaction, method = "BH"),
  #          p_cell_1_interaction_bonferroni = p.adjust(p_cell_1_interaction, method = "bonferroni"),
  #          p_cell_2_interaction_bonferroni = p.adjust(p_cell_2_interaction, method = "bonferroni"),
  #          p_tissue_interaction_bonferroni = p.adjust(p_tissue_interaction, method = "bonferroni"),
  #   ) %>% 
  #   select(-p_cell_1_interaction, -p_cell_2_interaction, -p_tissue_interaction) %>% 
  #   filter_all(any_vars(. < 0.1)) 
    # inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% View
  
  p_interaction_cell_2_final %>% 
    mutate(p_cell_1_interaction_cell_2_BH = p.adjust(p_cell_1_interaction_cell_2, method = "BH"),
           p_cell_2_interaction_cell_2_BH = p.adjust(p_cell_2_interaction_cell_2, method = "BH"),
           p_tissue_interaction_cell_2_BH = p.adjust(p_tissue_interaction_cell_2, method = "BH"),
           p_cell_1_interaction_cell_2_bonferroni = p.adjust(p_cell_1_interaction_cell_2, method = "bonferroni"),
           p_cell_2_interaction_cell_2_bonferroni = p.adjust(p_cell_2_interaction_cell_2, method = "bonferroni"),
           p_tissue_interaction_cell_2_bonferroni = p.adjust(p_tissue_interaction_cell_2, method = "bonferroni"),
    ) %>% 
    select(-p_cell_1_interaction_cell_2, -p_cell_2_interaction_cell_2, -p_tissue_interaction_cell_2) %>% 
    # filter_all(any_vars(. < 0.1)) 
    inner_join(gene_name_table %>% select(gene_index, gene_name))
    
  
  
  yhat_all_tibble_long_regression_tidy_result_all  %>% 
    mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
           p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    select(gene_index, p.value_tissue_BH, p.value_tissue_bonferroni) %>% 
    # filter_all(any_vars(. < 0.1)) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name))
  
  gene_en_bonferroni_0.05 <- yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
    mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
           p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    select(gene_index, p.value_tissue_BH, p.value_tissue_bonferroni) %>% 
    # filter_all(any_vars(. < 0.1)) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    filter(p.value_tissue_bonferroni < 0.05) %>% 
    pull(gene_name)
  # intersect(gene_tissue_bonferroni_0.05, gene_en_bonferroni_0.05)
  # intersect(gene_tissue_bonferroni_0.05, gene_sym_bonferroni_0.05)
  # intersect(gene_en_bonferroni_0.05, gene_sym_bonferroni_0.05)
  #   intersect(gene_sym_bonferroni_0.05,intersect(gene_tissue_bonferroni_0.05, gene_en_bonferroni_0.05)) # venn diagram 3 circles
  #   
  #   setdiff(gene_tissue_bonferroni_0.05, union(gene_en_bonferroni_0.05, gene_sym_bonferroni_0.05))
  #   setdiff(gene_en_bonferroni_0.05, union(gene_tissue_bonferroni_0.05, gene_sym_bonferroni_0.05))
  #   setdiff(gene_sym_bonferroni_0.05, union(gene_tissue_bonferroni_0.05, gene_en_bonferroni_0.05))
    
    gene_p_mixcan_BH_0.1 <- p_final %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      select(gene_name, p_mixcan = p_tissue) %>% 
      # filter(p_mixcan < 0.05/6081)
      mutate(p_mixcan_BH = p.adjust(p_mixcan, method = "BH")) %>% 
      filter(p_mixcan_BH < 0.1) %>% 
      pull(gene_name)
    # filter(p_mixcan_BH < 0.05)
    
    gene_p_mixcan_BY_0.1 <- p_final %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      select(gene_name, p_mixcan = p_tissue) %>% 
      # filter(p_mixcan < 0.05/6081)
      mutate(p_mixcan_BY = p.adjust(p_mixcan, method = "BY")) %>% 
      filter(p_mixcan_BY < 0.1) %>% 
      pull(gene_name)
    
    gene_p_mixcan_FWER_0.05 <- p_final %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      select(gene_name, p_mixcan = p_tissue) %>% 
      mutate(p_mixcan_BH = p.adjust(p_mixcan, method = "BH"),
             p.value_bonferroni = p.adjust(p_mixcan, method = "bonferroni")) %>% 
      filter(p.value_bonferroni < 0.05) %>% 
      pull(gene_name)
    
    gene_p_mixcan_cell_1_FWER_0.05 <- p_final %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      # select(gene_name, p_mixcan = p_tissue) %>% 
      mutate(
        p.value_bonferroni = p.adjust(p_cell_1, method = "bonferroni")) %>% 
      filter(p.value_bonferroni < 0.05) %>% 
      pull(gene_name)
    
    gene_p_mixcan_cell_1_BH_0.1 <- p_final %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      # filter(p_mixcan < 0.05/6081)
      mutate(p_mixcan_BH = p.adjust(p_cell_1, method = "BH")) %>% 
      filter(p_mixcan_BH < 0.1) %>% 
      pull(gene_name)
    
    gene_p_mixcan_cell_1_BY_0.1 <- p_final %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      # filter(p_mixcan < 0.05/6081)
      mutate(p_mixcan_BY = p.adjust(p_cell_1, method = "BY")) %>% 
      filter(p_mixcan_BY < 0.1) %>% 
      pull(gene_name)
    
    
    gene_p_mixcan_cell_2_FWER_0.05 <- p_final %>% 
      mutate(p_cell_2 = ifelse(is.na(p_cell_2), p_cell_1, p_cell_2)) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      # select(gene_name, p_mixcan = p_tissue) %>% 
      mutate(
        p.value_bonferroni = p.adjust(p_cell_2, method = "bonferroni")) %>% 
      filter(p.value_bonferroni < 0.05) %>% 
      pull(gene_name)
    
    gene_p_mixcan_cell_2_BH_0.1 <- p_final %>% 
      mutate(p_cell_2 = ifelse(is.na(p_cell_2), p_cell_1, p_cell_2)) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      # filter(p_mixcan < 0.05/6081)
      mutate(p_mixcan_BH = p.adjust(p_cell_2, method = "BH")) %>% 
      filter(p_mixcan_BH < 0.1) %>% 
      pull(gene_name)
    
    gene_p_mixcan_cell_2_BY_0.1 <- p_final %>% 
      mutate(p_cell_2 = ifelse(is.na(p_cell_2), p_cell_1, p_cell_2)) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      # filter(p_mixcan < 0.05/6081)
      mutate(p_mixcan_BY = p.adjust(p_cell_2, method = "BY")) %>% 
      filter(p_mixcan_BY < 0.1) %>% 
      pull(gene_name)
    
    
    gene_p_PrediXcan_BH_0.1 <- yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
      mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
             p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      rename(p.value_tissue = p.value) %>% 
      # filter(p.value_tissue_bonferroni < 0.05) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      filter(p.value_tissue_BH < 0.1) %>% 
      pull(gene_name)
    
    gene_p_PrediXcan_BY_0.1 <- yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
      mutate(p.value_tissue_BY = p.adjust(p.value, method = "BY"),
             p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      rename(p.value_tissue = p.value) %>% 
      # filter(p.value_tissue_bonferroni < 0.05) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      filter(p.value_tissue_BY < 0.1) %>% 
      pull(gene_name)
    
    gene_p_PrediXcan_FWER_0.05 <- yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
      mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
             p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      rename(p.value_tissue = p.value) %>% 
      filter(p.value_tissue_bonferroni < 0.05) %>%
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      pull(gene_name)
    

    
    
    
    
    
    
    
    # breast = data.table::fread(
    #   "Paper_PrediXcan/Data/GTEx_Analysis_v8_eQTL_expression_matrices/Breast_Mammary_Tissue.v8.normalized_expression.bed"
    # )
    # cov = data.frame(
    #   datatable::fread(
    #     "Paper_PrediXcan/Data/GTEx_Analysis_v8_Annotations_SubjectPhenotypesDS.txt"
    #   )
    # )
    # ensembl38 <-
    #   read_csv("Paper_PrediXcan/Data/ensembl38.txt") %>% janitor::clean_names()
    # ensembl38 = unique(ensembl38[, c("gene_stable_id", "gene_name")])
    # 
    # breast$gene_id2 = matrix(unlist(strsplit(breast$gene_id, '[.]')), ncol =
    #                            2, byrow = T)[, 1]
    # breast2 = merge(ensembl38, breast, by.x = "gene_stable_id", by.y = "gene_id2")
    # dup = unique(breast2[duplicated(breast2$gene_name), "gene_name"])
    # breast3 = breast2[-which(breast2$gene_name %in% dup), ]
    # #cov[which(cov$SEX==2), "SUBJID"]
    # library(data.table)
    # exprB = breast3[, colnames(breast3) %in% cov[which(cov$SEX == 2), "SUBJID"]]
    # rownames(exprB) = breast3$gene_name
    # 
    # gene_in_en_not_sym <- setdiff(gene_en_bonferroni_0.05, gene_sym_bonferroni_0.05)
    # gtex_race <- read_csv("Paper_PrediXcan/Data/gtex_v8_race.csv")
    # gtex_white <- gtex_race %>% 
    #   filter(RACE == "White") %>% 
    #   pull(SUBJID)
    # gene_cor_result_all <- NULL
    # for (i in 1:5){
    #   gene_once <- gene_in_en_not_sym[i]
    #   
    #   GTEx_gene_once <- read_csv("Paper_PrediXcan/Results/TSNetB_prop_GTEx_epi.csv") %>%
    #     # filter(str_detect(sample, "GTEx")) %>%
    #     group_by(sample) %>%
    #     summarise(mean_trim_0.05 = mean(prop, trim = 0.05)) %>%
    #     # mutate(sample = str_sub(sample, 1,12)) %>%
    #     filter(sample %in% gtex_white) %>%
    #     inner_join(exprB %>%
    #                  as_tibble(rownames = "Gene_ID") %>%
    #                  gather(sample, expr, -Gene_ID)) %>% 
    #     filter(Gene_ID == gene_once)
    #   
    #   if (dim(GTEx_gene_once)[1] == 0){
    #     gene_once_result <- NULL
    #   } else {
    #     gene_once_result <- lm(expr ~ mean_trim_0.05, data = GTEx_gene_once) %>% 
    #       broom::glance() %>% 
    #       mutate(Gene_ID = gene_once)
    #   }
    #   
    #   gene_cor_result_all <- gene_cor_result_all %>% bind_rows(gene_once_result)
    #   print(i)
    # }
    # 
    # yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
    #   mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
    #          p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    #   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    #   select(gene_name, p_predictDB_star = p.value) %>% 
    #   inner_join(gene_cor_result_all %>% rename(gene_name = Gene_ID)) %>% 
    #   mutate(p_predictDB_star_transformed = -log10(p_predictDB_star)) %>% 
    #   lm(p_predictDB_star_transformed ~ r.squared, data = .) %>% 
    #   broom::tidy()
    # 
    # yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
    #   mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
    #          p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    #   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    #   select(gene_name, p_predictDB_star = p.value) %>% 
    #   inner_join(gene_cor_result_all %>% rename(gene_name = Gene_ID)) %>% 
    #   mutate(p_predictDB_star_transformed = -log10(p_predictDB_star)) %>% 
    #   ggplot(aes(x = p_predictDB_star_transformed, y = r.squared))+
    #   geom_point()+
    #   geom_smooth(method = "lm", se = F)+
    #   theme_bw()+
    #   ggrepel::geom_text_repel(aes(label = gene_name))+
    #   annotate("text",label = "p = 0.0662", x= 8, y = 0.2, size = 5)+
    #   labs(x = expression(paste(-log[10],"(p-PredictDB*)")), y = expression(paste(R^2," between ", pi, " and gene expression")))
    # 
    # ggsave("Paper_PrediXcan/Plot/p_5genes.png", height = 8, width = 8)
    
    # VennDiagram::venn.diagram(
    #   list(
    #     "tissue" = gene_tissue_bonferroni_0.05,
    #     "en" = gene_en_bonferroni_0.05,
    #     "sym" = gene_sym_bonferroni_0.05
    #   ),
    #   filename = "/Users/jiayi/Downloads/venn_bonferroni_0.05.png",
    #   col = c("red", "purple","#9c9c00"),
    #   cex = 1,
    #   # width = 3000,
    #   cat.cex = 1,
    #   # cat.pos = c(1,1,1,1,50)
    #   # resolution = 300
    # )
    
    key_genes <- readxl::read_xlsx("Paper_PrediXcan/Results/KeyGenes.xlsx") %>% 
      select(gene_name = Gene) %>% 
      drop_na()
    yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
      filter(gene_index == 368)
    yhat_all_cell_1_mixcan <- yhat_all_cell_1_tibble_long_regression_tidy_result_all
    yhat_all_cell_2_mixcan <- yhat_all_cell_2_tibble_long_regression_tidy_result_all
    # key_genes %>% 
    #   left_join(yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
    #               inner_join(gene_name_table %>% select(gene_index, gene_name))) %>% 
    #   write_csv("Paper_PrediXcan/Results/key_genes_PrediXcan.csv",na = "")
    # key_genes %>% 
    #   left_join(yhat_all_cell_1_mixcan %>% 
    #               inner_join(gene_name_table %>% select(gene_index, gene_name)))  %>% 
    #   write_csv("Paper_PrediXcan/Results/key_genes_MiXcan_Epithelial.csv",na = "")
    # key_genes %>% 
    #   left_join(yhat_all_cell_2_mixcan %>% 
    #               inner_join(gene_name_table %>% select(gene_index, gene_name)))  %>% 
    #   write_csv("Paper_PrediXcan/Results/key_genes_MiXcan_non_Epithelial.csv",na = "")
    # 
    # key_genes %>%
    #   left_join(p_final %>% 
    #               inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    #               select(gene_name, p_mixcan = p_tissue)) %>% 
    #   write_csv("Paper_PrediXcan/Results/key_genes_MiXcan_combined.csv",na = "")
    
    load("Paper_PrediXcan/Results/cor_gene_chr_all.Rdata")
    ensembl38 <-
      read_csv("Paper_PrediXcan/Data/ensembl38.txt") %>% 
      janitor::clean_names() %>% 
      select(gene = gene_stable_id, gene_name) %>% unique
    
    gene_name_negative_correlation <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
      mutate(location = factor(location, levels = c(paste0("chr", seq(1:9), "_"),paste0("chr", 10:22)))) %>% 
      arrange(location) %>% 
      mutate(gene = str_sub(gene, 1,15)) %>% 
      left_join(ensembl38) %>% 
      mutate(correlation = cor_gene_chr_all) %>% 
      filter(correlation < -0.5) %>% 
      pull(gene_name)
    
    gene_name_positive_correlation <- read_csv("Paper_PrediXcan/Results/gene_location.csv") %>% 
      mutate(location = factor(location, levels = c(paste0("chr", seq(1:9), "_"),paste0("chr", 10:22)))) %>% 
      arrange(location) %>% 
      mutate(gene = str_sub(gene, 1,15)) %>% 
      left_join(ensembl38) %>% 
      mutate(correlation = cor_gene_chr_all) %>% 
      filter(correlation > 0.5) %>% 
      pull(gene_name)
    

    
    yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>%
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>%
      filter(!is.na(gene_name)) %>%
      select(
        gene_name,
        PrediXcan_estimate = estimate,
        PrediXcan_se = std.error,
        PrediXcan_p.value = p.value
      ) %>%
      full_join(
        yhat_all_cell_1_mixcan %>%
          inner_join(gene_name_table %>% select(gene_index, gene_name)) %>%
          select(
            gene_name,
            MiXcan_Epithelial_estimate = estimate,
            MiXcan_Epithelial_se = std.error,
            MiXcan_Epithelial_p.value = p.value
          ) %>% filter(!is.na(gene_name))
      ) %>%
      full_join(
        yhat_all_cell_2_mixcan %>%
          inner_join(gene_name_table %>% select(gene_index, gene_name)) %>%
          select(
            gene_name,
            MiXcan_non_Epithelial_estimate = estimate,
            MiXcan_non_Epithelial_se = std.error,
            MiXcan_non_Epithelial_p.value = p.value
          ) %>% filter(!is.na(gene_name))
      ) %>%
      left_join(    read_csv("Paper_PrediXcan/Results/result_type.csv") %>%
                      separate(gene, c("gene", "others")) %>% 
                      inner_join(gene_name_table %>% select(gene, gene_name)) %>% 
                      select(gene_name, type)) %>% 
      filter(!(is.na(PrediXcan_estimate))) %>% 
      mutate(MiXcan_non_Epithelial_estimate_is_na = ifelse(is.na(MiXcan_non_Epithelial_estimate), 1, 0)) %>% 
      mutate(
        MiXcan_non_Epithelial_estimate = case_when(
          is.na(MiXcan_non_Epithelial_estimate) & gene_name %in% gene_name_positive_correlation ~ PrediXcan_estimate,
          is.na(MiXcan_non_Epithelial_estimate) & gene_name %in% gene_name_negative_correlation ~ PrediXcan_estimate,
          # type == "CellSharing" ~ PrediXcan_estimate,
          TRUE ~ MiXcan_non_Epithelial_estimate
        ),
        MiXcan_non_Epithelial_se = case_when(
          is.na(MiXcan_non_Epithelial_se) ~ PrediXcan_se,
          # type == "CellSharing" ~ PrediXcan_se,
          TRUE ~ MiXcan_non_Epithelial_se
        ),
        MiXcan_non_Epithelial_p.value = case_when(
          is.na(MiXcan_non_Epithelial_p.value) ~ PrediXcan_p.value,
          # type == "CellSharing" ~ PrediXcan_p.value,
          TRUE ~ MiXcan_non_Epithelial_p.value
        )
      )  %>%
      mutate(
        MiXcan_Epithelial_estimate = case_when(
          MiXcan_non_Epithelial_estimate_is_na == 1 & gene_name %in% gene_name_positive_correlation ~ PrediXcan_estimate,
          MiXcan_non_Epithelial_estimate_is_na == 1 & gene_name %in% gene_name_negative_correlation ~ PrediXcan_estimate,
          # type == "CellSharing" ~ PrediXcan_estimate,
          TRUE ~ MiXcan_Epithelial_estimate
        ),
        MiXcan_Epithelial_se = case_when(
          MiXcan_non_Epithelial_estimate_is_na == 1 ~ PrediXcan_se,
          # type == "CellSharing" ~ PrediXcan_se,
          TRUE ~ MiXcan_Epithelial_se
        ),
        MiXcan_Epithelial_p.value = case_when(
          MiXcan_non_Epithelial_estimate_is_na == 1 ~ PrediXcan_p.value,
          # type == "CellSharing" ~ PrediXcan_p.value,
          TRUE ~ MiXcan_Epithelial_p.value
        )) %>% 
      # summarise_all(funs(sum(is.na(.)))) %>%
      # gather(variable, n_missing) %>%
      # arrange(desc(n_missing))
      select(-MiXcan_non_Epithelial_estimate_is_na) %>% 
      dplyr::select(gene_name, starts_with("MiXcan"), everything()) %>%
      select(-type) %>% 
      write_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv")
    
    read_tsv("Paper_PrediXcan/Results/result_OncaArray_predictDB.tsv") %>% 
      mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
             p.value_tissue_BY = p.adjust(p.value, method = "BY"),
             p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      rename(p.value_tissue = p.value) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      filter(gene_name == "RCCD1") 
    
    result_MiXcan_PrediXcan_combined <- yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>%
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>%
      select(
        gene_name,
        PrediXcan_estimate = estimate,
        PrediXcan_se = std.error,
        PrediXcan_p.value = p.value
      ) %>%
      mutate(p.value_tissue_PrediXcan_BY = p.adjust(PrediXcan_p.value, method = "BY"),
             p.value_tissue_PrediXcan_bonferroni = p.adjust(PrediXcan_p.value, method = "bonferroni")) %>% 
      filter(!is.na(gene_name)) %>% 
      full_join(
        yhat_all_cell_1_mixcan %>%
          inner_join(gene_name_table %>% select(gene_index, gene_name)) %>%
          select(
            gene_name,
            MiXcan_Epithelial_estimate = estimate,
            MiXcan_Epithelial_se = std.error,
            MiXcan_Epithelial_p.value = p.value
          ) %>% filter(!is.na(gene_name))  
      ) %>%
      full_join(
        yhat_all_cell_2_mixcan %>%
          inner_join(gene_name_table %>% select(gene_index, gene_name)) %>%
          select(
            gene_name,
            MiXcan_non_Epithelial_estimate = estimate,
            MiXcan_non_Epithelial_se = std.error,
            MiXcan_non_Epithelial_p.value = p.value
          ) %>% filter(!is.na(gene_name)) 
      ) %>%
      full_join(    read_csv("Paper_PrediXcan/Results/result_type.csv") %>%
                      separate(gene, c("gene", "others")) %>% 
                      inner_join(gene_name_table %>% select(gene, gene_name)) %>% 
                      select(gene_name, type)) %>% 
      mutate(MiXcan_non_Epithelial_estimate_is_na = ifelse(is.na(MiXcan_non_Epithelial_estimate), 1, 0)) %>% 
      mutate(
        MiXcan_non_Epithelial_estimate = case_when(
          is.na(MiXcan_non_Epithelial_estimate) & gene_name %in% gene_name_positive_correlation ~ PrediXcan_estimate,
          is.na(MiXcan_non_Epithelial_estimate) & gene_name %in% gene_name_negative_correlation ~ PrediXcan_estimate,
          TRUE ~ MiXcan_non_Epithelial_estimate
        ),
        MiXcan_non_Epithelial_se = case_when(
          is.na(MiXcan_non_Epithelial_se) ~ PrediXcan_se,
          TRUE ~ MiXcan_non_Epithelial_se
        ),
        MiXcan_non_Epithelial_p.value = case_when(
          is.na(MiXcan_non_Epithelial_p.value) ~ PrediXcan_p.value,
          TRUE ~ MiXcan_non_Epithelial_p.value
        )
      )  %>%
      mutate(
        MiXcan_Epithelial_estimate = case_when(
          MiXcan_non_Epithelial_estimate_is_na == 1 & gene_name %in% gene_name_positive_correlation ~ PrediXcan_estimate,
          MiXcan_non_Epithelial_estimate_is_na == 1 & gene_name %in% gene_name_negative_correlation ~ PrediXcan_estimate,
          # type == "CellSharing" ~ PrediXcan_estimate,
          TRUE ~ MiXcan_Epithelial_estimate
        ),
        MiXcan_Epithelial_se = case_when(
          MiXcan_non_Epithelial_estimate_is_na == 1 ~ PrediXcan_se,
          # type == "CellSharing" ~ PrediXcan_se,
          TRUE ~ MiXcan_Epithelial_se
        ),
        MiXcan_Epithelial_p.value = case_when(
          MiXcan_non_Epithelial_estimate_is_na == 1 ~ PrediXcan_p.value,
          # type == "CellSharing" ~ PrediXcan_p.value,
          TRUE ~ MiXcan_Epithelial_p.value
        )) %>% 
      select(-MiXcan_non_Epithelial_estimate_is_na) %>% 
      dplyr::select(gene_name, starts_with("MiXcan"), everything()) %>%
      select(-type) %>% 
      inner_join(p_final %>% 
                   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
                   select(p_MiXcan_combined = p_tissue, gene_name) %>% 
                   mutate(p_MiXcan_combined_bonferroni = p.adjust(p_MiXcan_combined, method = "bonferroni"),
                          p_MiXcan_combined_BY = p.adjust(p_MiXcan_combined, method = "BY"))) %>% 
      select(gene_name, contains("MiXcan"), everything()) 
    
    # result_MiXcan_PrediXcan_combined %>% 
    #   write_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0915.tsv")
    
    yhat_all_tibble_long_regression_tidy_result_all  %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      mutate(p_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      filter(p_bonferroni < 0.05)
    
    gene_p_mixcan_BY_0.1 <- p_final %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      select(gene_name, p_mixcan = p_tissue) %>% 
      # filter(p_mixcan < 0.05/6081)
      mutate(p_mixcan_BY = p.adjust(p_mixcan, method = "BY")) %>% 
      filter(p_mixcan_BY < 0.1) %>% 
      pull(gene_name)
    # filter(p_mixcan_BY < 0.05)
    
    gene_p_PrediXcan_BY_0.1 <- yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
      mutate(p.value_tissue_BY = p.adjust(p.value, method = "BY"),
             p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      rename(p.value_tissue = p.value) %>% 
      # filter(p.value_tissue_bonferroni < 0.05) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      filter(p.value_tissue_BY < 0.1) %>% 
      pull(gene_name)
    # filter(p.value_tissue_BY < 0.05)
    
    gene_p_PrediXcan_FWER_0.05 <- yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
      mutate(p.value_tissue_BY = p.adjust(p.value, method = "BY"),
             p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      rename(p.value_tissue = p.value) %>% 
      filter(p.value_tissue_bonferroni < 0.05) %>%
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      # filter(p.value_tissue_BY < 0.1) %>% 
      pull(gene_name)
    
    gene_p_predictDB_FWER_0.05 <- read_tsv("Paper_PrediXcan/Results/result_OncaArray_predictDB.tsv") %>% 
      mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
             p.value_tissue_BY = p.adjust(p.value, method = "BY"),
             p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      rename(p.value_tissue = p.value) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      # select(gene_name, p_predictDB_star = p.value_tissue)  %>% 
      filter(p.value_tissue_bonferroni < 0.05) %>% 
      pull(gene_name) 
    
    
    gene_p_predictDB_BY_0.1 <- read_tsv("Paper_PrediXcan/Results/result_OncaArray_predictDB.tsv") %>% 
      mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
             p.value_tissue_BY = p.adjust(p.value, method = "BY"),
             p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      rename(p.value_tissue = p.value) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      # select(gene_name, p_predictDB_star = p.value_tissue)  %>% 
      filter(p.value_tissue_BY < 0.1) %>% 
      pull(gene_name) 
    
    intersect(gene_p_mixcan_BY_0.1, intersect(gene_p_PrediXcan_BY_0.1, gene_p_predictDB_BY_0.1))
    setdiff(gene_p_mixcan_BY_0.1, union(gene_p_PrediXcan_BY_0.1, gene_p_predictDB_BY_0.1))
    setdiff(gene_p_PrediXcan_BY_0.1 , union(gene_p_mixcan_BY_0.1, gene_p_predictDB_BY_0.1))
    setdiff( gene_p_predictDB_BY_0.1, union(gene_p_mixcan_BY_0.1,  gene_p_PrediXcan_BY_0.1))
    setdiff(intersect(gene_p_PrediXcan_BY_0.1, gene_p_predictDB_BY_0.1),gene_p_mixcan_BY_0.1)
    setdiff(intersect(gene_p_PrediXcan_BY_0.1, gene_p_mixcan_BY_0.1 ),gene_p_predictDB_BY_0.1)
    setdiff(intersect(gene_p_predictDB_BY_0.1, gene_p_mixcan_BY_0.1 ),gene_p_PrediXcan_BY_0.1 )
    
    intersect(gene_p_mixcan_FWER_0.05, intersect(gene_p_PrediXcan_FWER_0.05, gene_p_predictDB_FWER_0.05))
    setdiff(gene_p_mixcan_FWER_0.05, union(gene_p_PrediXcan_FWER_0.05, gene_p_predictDB_FWER_0.05))
    setdiff(gene_p_PrediXcan_FWER_0.05 , union(gene_p_mixcan_FWER_0.05, gene_p_predictDB_FWER_0.05))
    setdiff( gene_p_predictDB_FWER_0.05, union(gene_p_mixcan_FWER_0.05,  gene_p_PrediXcan_FWER_0.05))
    setdiff(intersect(gene_p_PrediXcan_FWER_0.05, gene_p_predictDB_FWER_0.05),gene_p_mixcan_FWER_0.05)
    setdiff(intersect(gene_p_PrediXcan_FWER_0.05, gene_p_mixcan_FWER_0.05 ),gene_p_predictDB_FWER_0.05)
    setdiff(intersect(gene_p_predictDB_FWER_0.05, gene_p_mixcan_FWER_0.05 ),gene_p_PrediXcan_FWER_0.05 )
    
    library(ggrepel)
    ( p_PredictDB_MiXcan <- p_final %>% 
        # mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
        #        p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
        #        p_tissue_BH = p.adjust(p_tissue, method = "BH"),
        #        p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
        #        p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
        #        p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
        # ) %>% 
        # select(-p_cell_1, -p_cell_2, -p_tissue) %>% 
        inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
        select(gene_name, p_mixcan = p_tissue) %>% 
        full_join(yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
                    mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
                           p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
                    rename(p.value_tissue = p.value) %>% 
                    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
                    select(gene_name, p_predictDB_star = p.value_tissue) 
        ) %>% 
        mutate(p_mixcan_transformed = -log10(p_mixcan),
               p_predictDB_star_transformed = -log10(p_predictDB_star)) %>% 
        mutate(p_mixcan_transformed = ifelse(is.na(p_mixcan_transformed), 0, p_mixcan_transformed),
               p_predictDB_star_transformed = ifelse(is.na(p_predictDB_star_transformed), 0, p_predictDB_star_transformed)) %>% 
        mutate(p_mixcan_transformed = case_when(gene_name %in% c(intersect(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05), "RCCD1") ~ p_predictDB_star_transformed,
               TRUE ~ p_mixcan_transformed)) %>% 
        # mutate(label = case_when(p_mixcan_transformed > 5.1 | p_predictDB_star_transformed > 5.1 ~ gene_name,
        #                          TRUE ~ NA_character_)) %>% 
        mutate(label = case_when(gene_name %in% c(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05) ~ gene_name,
                                 TRUE ~ NA_character_)) %>%
        mutate(color = case_when(gene_name %in% c(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05) ~ "red",
                                 TRUE ~ "black"),
               size = case_when(gene_name %in% c(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05) ~ 2,
                                TRUE ~ 1)) %>% 
        mutate(size = as.factor(size)) %>%                          
        ggplot(aes(x = p_predictDB_star_transformed, y = p_mixcan_transformed))+
        geom_point(aes(color = color, size = size, alpha = size))+
        # geom_vline(xintercept = 4.7, linetype = "dashed")+
        geom_vline(xintercept = -log10(0.05/6000), linetype = "dashed")+
        scale_y_continuous(limits = c(0,18), breaks = c(0,5,10,15))+
        scale_x_continuous(limits = c(0,18), breaks = c(0,5,10,15))+
        # geom_hline(yintercept = 4.7, linetype = "dashed")+
        geom_hline(yintercept = -log10(0.05/6000), linetype = "dashed")+
        geom_abline(slope = 1, intercept = 0,linetype = "dashed")+
        geom_text_repel(aes(label = label), size = 6)+
        scale_color_manual(values = c("black","red"))+
        scale_size_manual(values = c(1,2))+
        labs( y = expression(paste(-log[10],"(p-MiXcan)")),x= expression(paste(-log[10],"(p-PrediXcan)")))+
        theme_bw()+
        theme(axis.title=element_text(size=23),
              plot.title = element_text(size = 23),
              axis.text = element_text(size = 23),
              legend.position = "none"))
    
    
    # ggsave("Paper_PrediXcan/Plot/p_PredictDB_MiXcan.png", height = 8, width = 8)
    
    ggsave(file = "Paper_PrediXcan/Plot/figure5_0515.png", height = 8, width = 8)
    
    result_MiXcan_PrediXcan_combined_overlap <- read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
      filter(gene_name %in% intersect(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05)) %>% 
      inner_join(p_final %>% 
                   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
                   filter(gene_name %in% intersect(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05)) %>% 
                   select(p_MiXcan_combined = p_tissue, gene_name)) %>% 
      select(gene_name, contains("MiXcan"), everything()) %>% 
      arrange(p_MiXcan_combined) %>% 
      mutate(MiXcan_Epithelial_estimate = formatC( MiXcan_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_Epithelial_se = formatC( MiXcan_Epithelial_se, format='f', digits=2 ),
             MiXcan_non_Epithelial_estimate = formatC( MiXcan_non_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_non_Epithelial_se = formatC( MiXcan_non_Epithelial_se, format='f', digits=2 ),
             PrediXcan_estimate = formatC( PrediXcan_estimate, format='f', digits=2 ),
             PrediXcan_se = formatC( PrediXcan_se, format='f', digits=2 ),
             MiXcan_Epithelial_p.value = formatC( MiXcan_Epithelial_p.value, format = "e", digits = 1 ),
             MiXcan_non_Epithelial_p.value = formatC( MiXcan_non_Epithelial_p.value, format = "e", digits = 1 ),
             p_MiXcan_combined = formatC( p_MiXcan_combined, format = "e", digits = 1 ),
             PrediXcan_p.value = formatC( PrediXcan_p.value, format = "e", digits = 1 )
      ) %>% 
      # mutate(MiXcan_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_1_FWER_0.05 ~ paste0(MiXcan_Epithelial_p.value, "***"),
      #                                              gene_name %in% gene_p_mixcan_cell_1_BH_0.1 ~ paste0(MiXcan_Epithelial_p.value, "**"),
      #                                              TRUE ~ MiXcan_Epithelial_p.value)) %>% 
      # mutate(MiXcan_non_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_2_FWER_0.05 ~ paste0(MiXcan_non_Epithelial_p.value, "***"),
      #                                                  gene_name %in% gene_p_mixcan_cell_2_BH_0.1 ~ paste0(MiXcan_non_Epithelial_p.value, "**"),
      #                                                  TRUE ~ MiXcan_non_Epithelial_p.value)) %>% 
      mutate(p_MiXcan_combined = case_when(gene_name %in% gene_p_mixcan_FWER_0.05 ~ paste0(p_MiXcan_combined, "***"),
                                           gene_name %in% gene_p_mixcan_BH_0.1 ~ paste0(p_MiXcan_combined, "**"),
                                           TRUE ~ p_MiXcan_combined)) %>% 
      mutate(PrediXcan_p.value = case_when(gene_name %in% gene_p_PrediXcan_FWER_0.05 ~ paste0(PrediXcan_p.value, "***"),
                                           gene_name %in% gene_p_PrediXcan_BH_0.1 ~ paste0(PrediXcan_p.value, "**"),
                                           TRUE ~ PrediXcan_p.value)) 
    
    result_MiXcan_PrediXcan_combined_setdiff_mixcan_PrediXcan <- read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
      filter(gene_name %in% setdiff(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05)) %>% 
      inner_join(p_final %>% 
                   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
                   filter(gene_name %in% setdiff(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05)) %>% 
                   select(p_MiXcan_combined = p_tissue, gene_name)) %>% 
      select(gene_name, contains("MiXcan"), everything()) %>% 
      arrange(p_MiXcan_combined) %>% 
      mutate(MiXcan_Epithelial_estimate = formatC( MiXcan_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_Epithelial_se = formatC( MiXcan_Epithelial_se, format='f', digits=2 ),
             MiXcan_non_Epithelial_estimate = formatC( MiXcan_non_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_non_Epithelial_se = formatC( MiXcan_non_Epithelial_se, format='f', digits=2 ),
             PrediXcan_estimate = formatC( PrediXcan_estimate, format='f', digits=2 ),
             PrediXcan_se = formatC( PrediXcan_se, format='f', digits=2 ),
             MiXcan_Epithelial_p.value = formatC( MiXcan_Epithelial_p.value, format = "e", digits = 1 ),
             MiXcan_non_Epithelial_p.value = formatC( MiXcan_non_Epithelial_p.value, format = "e", digits = 1 ),
             p_MiXcan_combined = formatC( p_MiXcan_combined, format = "e", digits = 1 ),
             PrediXcan_p.value = formatC( PrediXcan_p.value, format = "e", digits = 1 )
      ) %>% 
      # mutate(MiXcan_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_1_FWER_0.05 ~ paste0(MiXcan_Epithelial_p.value, "***"),
      #                                              gene_name %in% gene_p_mixcan_cell_1_BH_0.1 ~ paste0(MiXcan_Epithelial_p.value, "**"),
      #                                              TRUE ~ MiXcan_Epithelial_p.value)) %>% 
      # mutate(MiXcan_non_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_2_FWER_0.05 ~ paste0(MiXcan_non_Epithelial_p.value, "***"),
      #                                                  gene_name %in% gene_p_mixcan_cell_2_BH_0.1 ~ paste0(MiXcan_non_Epithelial_p.value, "**"),
      #                                                  TRUE ~ MiXcan_non_Epithelial_p.value)) %>% 
      mutate(p_MiXcan_combined = case_when(gene_name %in% gene_p_mixcan_FWER_0.05 ~ paste0(p_MiXcan_combined, "***"),
                                           gene_name %in% gene_p_mixcan_BH_0.1 ~ paste0(p_MiXcan_combined, "**"),
                                           TRUE ~ p_MiXcan_combined)) %>% 
      mutate(PrediXcan_p.value = case_when(gene_name %in% gene_p_PrediXcan_FWER_0.05 ~ paste0(PrediXcan_p.value, "***"),
                                           gene_name %in% gene_p_PrediXcan_BH_0.1 ~ paste0(PrediXcan_p.value, "**"),
                                           TRUE ~ PrediXcan_p.value)) 
    
    result_MiXcan_PrediXcan_combined_setdiff_PrediXcan_mixcan <- read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
      filter(gene_name %in% setdiff(gene_p_PrediXcan_FWER_0.05, gene_p_mixcan_FWER_0.05)) %>% 
      inner_join(p_final %>% 
                   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
                   filter(gene_name %in% setdiff(gene_p_PrediXcan_FWER_0.05, gene_p_mixcan_FWER_0.05)) %>% 
                   select(p_MiXcan_combined = p_tissue, gene_name)) %>% 
      select(gene_name, contains("MiXcan"), everything()) %>% 
      arrange(p_MiXcan_combined) %>% 
      mutate(MiXcan_Epithelial_estimate = formatC( MiXcan_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_Epithelial_se = formatC( MiXcan_Epithelial_se, format='f', digits=2 ),
             MiXcan_non_Epithelial_estimate = formatC( MiXcan_non_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_non_Epithelial_se = formatC( MiXcan_non_Epithelial_se, format='f', digits=2 ),
             PrediXcan_estimate = formatC( PrediXcan_estimate, format='f', digits=2 ),
             PrediXcan_se = formatC( PrediXcan_se, format='f', digits=2 ),
             MiXcan_Epithelial_p.value = formatC( MiXcan_Epithelial_p.value, format = "e", digits = 1 ),
             MiXcan_non_Epithelial_p.value = formatC( MiXcan_non_Epithelial_p.value, format = "e", digits = 1 ),
             p_MiXcan_combined = formatC( p_MiXcan_combined, format = "e", digits = 1 ),
             PrediXcan_p.value = formatC( PrediXcan_p.value, format = "e", digits = 1 )
      ) %>% 
      # mutate(MiXcan_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_1_FWER_0.05 ~ paste0(MiXcan_Epithelial_p.value, "***"),
      #                                              gene_name %in% gene_p_mixcan_cell_1_BH_0.1 ~ paste0(MiXcan_Epithelial_p.value, "**"),
      #                                              TRUE ~ MiXcan_Epithelial_p.value)) %>% 
      # mutate(MiXcan_non_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_2_FWER_0.05 ~ paste0(MiXcan_non_Epithelial_p.value, "***"),
      #                                                  gene_name %in% gene_p_mixcan_cell_2_BH_0.1 ~ paste0(MiXcan_non_Epithelial_p.value, "**"),
      #                                                  TRUE ~ MiXcan_non_Epithelial_p.value)) %>% 
      mutate(p_MiXcan_combined = case_when(gene_name %in% gene_p_mixcan_FWER_0.05 ~ paste0(p_MiXcan_combined, "***"),
                                           gene_name %in% gene_p_mixcan_BH_0.1 ~ paste0(p_MiXcan_combined, "**"),
                                           TRUE ~ p_MiXcan_combined)) %>% 
      mutate(PrediXcan_p.value = case_when(gene_name %in% gene_p_PrediXcan_FWER_0.05 ~ paste0(PrediXcan_p.value, "***"),
                                           gene_name %in% gene_p_PrediXcan_BH_0.1 ~ paste0(PrediXcan_p.value, "**"),
                                           TRUE ~ PrediXcan_p.value)) 
    
    
    bcac_en <- read_tsv("Paper_PrediXcan/Data/BCAC/bcac_spredixcan_results_2021-03-28.txt") %>%  
      select(gene_name, en_Breast_Mammary_Tissue_p, en_Breast_Mammary_Tissue_beta, en_Adipose_Subcutaneous_p, en_Adipose_Subcutaneous_beta) %>% 
      mutate(en_Breast_Mammary_Tissue_p = formatC(en_Breast_Mammary_Tissue_p, format = "e", digits = 1),
             en_Adipose_Subcutaneous_p = formatC(en_Adipose_Subcutaneous_p, format = "e", digits = 1),
             en_Breast_Mammary_Tissue_beta = case_when(en_Breast_Mammary_Tissue_beta >0 ~ "+",
                                                       en_Breast_Mammary_Tissue_beta <0 ~ "-"),
             en_Adipose_Subcutaneous_beta = case_when(en_Adipose_Subcutaneous_beta >0 ~ "+",
                                                      en_Adipose_Subcutaneous_beta <0 ~ "-")) %>% 
      mutate("BCAC Breast" = paste0("(",en_Breast_Mammary_Tissue_beta,") ", en_Breast_Mammary_Tissue_p),
             "BCAC Sub.Fat" = paste0("(",en_Adipose_Subcutaneous_beta,") ", en_Adipose_Subcutaneous_p)) %>% 
      mutate(`BCAC Breast` = ifelse(`BCAC Breast` == "(NA) NA", NA, `BCAC Breast`)) %>% 
      mutate(`BCAC Sub.Fat` = ifelse(`BCAC Sub.Fat` == "(NA) NA", NA, `BCAC Sub.Fat`)) %>% 
      select(Gene = gene_name, `BCAC Breast`, `BCAC Sub.Fat`)
    
    readxl::read_xlsx("Paper_PrediXcan/Results/KeyGenes_table_1_0907.xlsx") %>% 
      select(Gene) %>% 
      left_join(bcac_en) %>% 
      write_tsv("Paper_PrediXcan/Results/KeyGenes_table_bcac_en.tsv")
    readxl::read_xlsx("Paper_PrediXcan/Results/KeyGenes_supp_table_1_0907.xlsx") %>% 
      select(Gene) %>% 
      left_join(bcac_en) %>% 
      write_tsv("Paper_PrediXcan/Results/KeyGenes_supp_table_1_bcac_en.tsv")
    
    
    bcac_spredixcan_results <- read_tsv("Paper_PrediXcan/Data/BCAC/bcac_spredixcan_results_2021-03-28.txt") %>%  
      select(gene_name, mashr_Breast_Mammary_Tissue_p, mashr_Breast_Mammary_Tissue_beta, mashr_Adipose_Subcutaneous_p, mashr_Adipose_Subcutaneous_beta) %>% 
      mutate(mashr_Breast_Mammary_Tissue_p = formatC(mashr_Breast_Mammary_Tissue_p, format = "e", digits = 1),
             mashr_Adipose_Subcutaneous_p = formatC(mashr_Adipose_Subcutaneous_p, format = "e", digits = 1),
             mashr_Breast_Mammary_Tissue_beta = case_when(mashr_Breast_Mammary_Tissue_beta >0 ~ "+",
                                                          mashr_Breast_Mammary_Tissue_beta <0 ~ "-"),
             mashr_Adipose_Subcutaneous_beta = case_when(mashr_Adipose_Subcutaneous_beta >0 ~ "+",
                                                         mashr_Adipose_Subcutaneous_beta <0 ~ "-")) %>% 
      mutate("BCAC Breast" = paste0("(",mashr_Breast_Mammary_Tissue_beta,") ", mashr_Breast_Mammary_Tissue_p),
             "BCAC Sub.Fat" = paste0("(",mashr_Adipose_Subcutaneous_beta,") ", mashr_Adipose_Subcutaneous_p)) %>% 
      mutate(`BCAC Breast` = ifelse(`BCAC Breast` == "(NA) NA", NA, `BCAC Breast`)) %>% 
      mutate(`BCAC Sub.Fat` = ifelse(`BCAC Sub.Fat` == "(NA) NA", NA, `BCAC Sub.Fat`)) %>% 
      select(gene_name, `BCAC Breast`, `BCAC Sub.Fat`)
    intersect(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05) %>% length()
    result_MiXcan_PrediXcan_combined_overlap %>% 
      left_join(bcac_spredixcan_results %>% 
                  filter(gene_name %in% intersect(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05))) %>% 
      write_tsv("Paper_PrediXcan/Results/gene_p_mixcan_PrediXcan_FWER_0.05_overlap_0515.tsv")
    setdiff(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05) %>% length
    result_MiXcan_PrediXcan_combined_setdiff_mixcan_PrediXcan %>% 
      left_join(bcac_spredixcan_results %>% 
                  filter(gene_name %in% setdiff(gene_p_mixcan_FWER_0.05, gene_p_PrediXcan_FWER_0.05))) %>% 
      write_tsv("Paper_PrediXcan/Results/gene_p_mixcan_PrediXcan_setdiff_mixcan_PrediXcan_0515.tsv")
    
    setdiff(gene_p_PrediXcan_FWER_0.05, gene_p_mixcan_FWER_0.05) %>% length()
    result_MiXcan_PrediXcan_combined_setdiff_PrediXcan_mixcan %>% 
      left_join(bcac_spredixcan_results %>% 
                  filter(gene_name %in% setdiff(gene_p_PrediXcan_FWER_0.05, gene_p_mixcan_FWER_0.05))) %>% View
      write_tsv("Paper_PrediXcan/Results/gene_p_mixcan_PrediXcan_setdiff_PrediXcan_mixcan_0515.tsv")
    
    
    result_MiXcan_PrediXcan_combined_overlap <- read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
      filter(gene_name %in% intersect(gene_p_mixcan_BH_0.1, gene_p_PrediXcan_BH_0.1)) %>% 
      inner_join(p_final %>% 
                   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
                   filter(gene_name %in% intersect(gene_p_mixcan_BH_0.1, gene_p_PrediXcan_BH_0.1)) %>% 
                   select(p_MiXcan_combined = p_tissue, gene_name)) %>% 
      select(gene_name, contains("MiXcan"), everything()) %>% 
      arrange(p_MiXcan_combined) %>% 
      mutate(MiXcan_Epithelial_estimate = formatC( MiXcan_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_Epithelial_se = formatC( MiXcan_Epithelial_se, format='f', digits=2 ),
             MiXcan_non_Epithelial_estimate = formatC( MiXcan_non_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_non_Epithelial_se = formatC( MiXcan_non_Epithelial_se, format='f', digits=2 ),
             PrediXcan_estimate = formatC( PrediXcan_estimate, format='f', digits=2 ),
             PrediXcan_se = formatC( PrediXcan_se, format='f', digits=2 ),
             MiXcan_Epithelial_p.value = formatC( MiXcan_Epithelial_p.value, format = "e", digits = 1 ),
             MiXcan_non_Epithelial_p.value = formatC( MiXcan_non_Epithelial_p.value, format = "e", digits = 1 ),
             p_MiXcan_combined = formatC( p_MiXcan_combined, format = "e", digits = 1 ),
             PrediXcan_p.value = formatC( PrediXcan_p.value, format = "e", digits = 1 )
      ) %>% 
      # mutate(MiXcan_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_1_BH_0.1 ~ paste0(MiXcan_Epithelial_p.value, "***"),
      #                                              gene_name %in% gene_p_mixcan_cell_1_BH_0.1 ~ paste0(MiXcan_Epithelial_p.value, "**"),
      #                                              TRUE ~ MiXcan_Epithelial_p.value)) %>% 
      # mutate(MiXcan_non_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_2_BH_0.1 ~ paste0(MiXcan_non_Epithelial_p.value, "***"),
      #                                                  gene_name %in% gene_p_mixcan_cell_2_BH_0.1 ~ paste0(MiXcan_non_Epithelial_p.value, "**"),
      #                                                  TRUE ~ MiXcan_non_Epithelial_p.value)) %>% 
      mutate(p_MiXcan_combined = case_when(gene_name %in% gene_p_mixcan_FWER_0.05 ~ paste0(p_MiXcan_combined, "***"),
                                           gene_name %in% gene_p_mixcan_BH_0.1 ~ paste0(p_MiXcan_combined, "**"),
                                           TRUE ~ p_MiXcan_combined)) %>% 
      mutate(PrediXcan_p.value = case_when(gene_name %in% gene_p_PrediXcan_FWER_0.05 ~ paste0(PrediXcan_p.value, "***"),
                                           gene_name %in% gene_p_PrediXcan_BH_0.1 ~ paste0(PrediXcan_p.value, "**"),
                                           TRUE ~ PrediXcan_p.value)) 
    
    result_MiXcan_PrediXcan_combined_setdiff_mixcan_PrediXcan <- read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
      filter(gene_name %in% setdiff(gene_p_mixcan_BH_0.1, gene_p_PrediXcan_BH_0.1)) %>% 
      inner_join(p_final %>% 
                   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
                   filter(gene_name %in% setdiff(gene_p_mixcan_BH_0.1, gene_p_PrediXcan_BH_0.1)) %>% 
                   select(p_MiXcan_combined = p_tissue, gene_name)) %>% 
      select(gene_name, contains("MiXcan"), everything()) %>% 
      arrange(p_MiXcan_combined) %>% 
      mutate(MiXcan_Epithelial_estimate = formatC( MiXcan_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_Epithelial_se = formatC( MiXcan_Epithelial_se, format='f', digits=2 ),
             MiXcan_non_Epithelial_estimate = formatC( MiXcan_non_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_non_Epithelial_se = formatC( MiXcan_non_Epithelial_se, format='f', digits=2 ),
             PrediXcan_estimate = formatC( PrediXcan_estimate, format='f', digits=2 ),
             PrediXcan_se = formatC( PrediXcan_se, format='f', digits=2 ),
             MiXcan_Epithelial_p.value = formatC( MiXcan_Epithelial_p.value, format = "e", digits = 1 ),
             MiXcan_non_Epithelial_p.value = formatC( MiXcan_non_Epithelial_p.value, format = "e", digits = 1 ),
             p_MiXcan_combined = formatC( p_MiXcan_combined, format = "e", digits = 1 ),
             PrediXcan_p.value = formatC( PrediXcan_p.value, format = "e", digits = 1 )
      ) %>% 
      # mutate(MiXcan_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_1_BH_0.1 ~ paste0(MiXcan_Epithelial_p.value, "***"),
      #                                              gene_name %in% gene_p_mixcan_cell_1_BH_0.1 ~ paste0(MiXcan_Epithelial_p.value, "**"),
      #                                              TRUE ~ MiXcan_Epithelial_p.value)) %>% 
      # mutate(MiXcan_non_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_2_BH_0.1 ~ paste0(MiXcan_non_Epithelial_p.value, "***"),
      #                                                  gene_name %in% gene_p_mixcan_cell_2_BH_0.1 ~ paste0(MiXcan_non_Epithelial_p.value, "**"),
      #                                                  TRUE ~ MiXcan_non_Epithelial_p.value)) %>% 
      mutate(p_MiXcan_combined = case_when(gene_name %in% gene_p_mixcan_FWER_0.05 ~ paste0(p_MiXcan_combined, "***"),
                                           gene_name %in% gene_p_mixcan_BH_0.1 ~ paste0(p_MiXcan_combined, "**"),
                                           TRUE ~ p_MiXcan_combined)) %>% 
      mutate(PrediXcan_p.value = case_when(gene_name %in% gene_p_PrediXcan_FWER_0.05 ~ paste0(PrediXcan_p.value, "***"),
                                           gene_name %in% gene_p_PrediXcan_BH_0.1 ~ paste0(PrediXcan_p.value, "**"),
                                           TRUE ~ PrediXcan_p.value)) 
    
    result_MiXcan_PrediXcan_combined_setdiff_PrediXcan_mixcan <- read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
      filter(gene_name %in% setdiff(gene_p_PrediXcan_BH_0.1, gene_p_mixcan_BH_0.1)) %>% 
      inner_join(p_final %>% 
                   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
                   filter(gene_name %in% setdiff(gene_p_PrediXcan_BH_0.1, gene_p_mixcan_BH_0.1)) %>% 
                   select(p_MiXcan_combined = p_tissue, gene_name)) %>% 
      select(gene_name, contains("MiXcan"), everything()) %>% 
      arrange(PrediXcan_p.value) %>% 
      mutate(MiXcan_Epithelial_estimate = formatC( MiXcan_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_Epithelial_se = formatC( MiXcan_Epithelial_se, format='f', digits=2 ),
             MiXcan_non_Epithelial_estimate = formatC( MiXcan_non_Epithelial_estimate, format='f', digits=2 ),
             MiXcan_non_Epithelial_se = formatC( MiXcan_non_Epithelial_se, format='f', digits=2 ),
             PrediXcan_estimate = formatC( PrediXcan_estimate, format='f', digits=2 ),
             PrediXcan_se = formatC( PrediXcan_se, format='f', digits=2 ),
             MiXcan_Epithelial_p.value = formatC( MiXcan_Epithelial_p.value, format = "e", digits = 1 ),
             MiXcan_non_Epithelial_p.value = formatC( MiXcan_non_Epithelial_p.value, format = "e", digits = 1 ),
             p_MiXcan_combined = formatC( p_MiXcan_combined, format = "e", digits = 1 ),
             PrediXcan_p.value = formatC( PrediXcan_p.value, format = "e", digits = 1 )
      ) %>% 
      # mutate(MiXcan_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_1_BH_0.1 ~ paste0(MiXcan_Epithelial_p.value, "***"),
      #                                              gene_name %in% gene_p_mixcan_cell_1_BH_0.1 ~ paste0(MiXcan_Epithelial_p.value, "**"),
      #                                              TRUE ~ MiXcan_Epithelial_p.value)) %>% 
      # mutate(MiXcan_non_Epithelial_p.value = case_when(gene_name %in% gene_p_mixcan_cell_2_BH_0.1 ~ paste0(MiXcan_non_Epithelial_p.value, "***"),
      #                                                  gene_name %in% gene_p_mixcan_cell_2_BH_0.1 ~ paste0(MiXcan_non_Epithelial_p.value, "**"),
      #                                                  TRUE ~ MiXcan_non_Epithelial_p.value)) %>% 
      mutate(p_MiXcan_combined = case_when(gene_name %in% gene_p_mixcan_FWER_0.05 ~ paste0(p_MiXcan_combined, "***"),
                                           gene_name %in% gene_p_mixcan_BH_0.1 ~ paste0(p_MiXcan_combined, "**"),
                                           TRUE ~ p_MiXcan_combined)) %>% 
      mutate(PrediXcan_p.value = case_when(gene_name %in% gene_p_PrediXcan_FWER_0.05 ~ paste0(PrediXcan_p.value, "***"),
                                           gene_name %in% gene_p_PrediXcan_BH_0.1 ~ paste0(PrediXcan_p.value, "**"),
                                           TRUE ~ PrediXcan_p.value)) 
    
    bcac_spredixcan_results <- read_tsv("Paper_PrediXcan/Data/BCAC/bcac_spredixcan_results_2021-03-28.txt") %>%  
      select(gene_name, mashr_Breast_Mammary_Tissue_p, mashr_Breast_Mammary_Tissue_beta, mashr_Adipose_Subcutaneous_p, mashr_Adipose_Subcutaneous_beta) %>% 
      mutate(mashr_Breast_Mammary_Tissue_p = formatC(mashr_Breast_Mammary_Tissue_p, format = "e", digits = 1),
             mashr_Adipose_Subcutaneous_p = formatC(mashr_Adipose_Subcutaneous_p, format = "e", digits = 1),
             mashr_Breast_Mammary_Tissue_beta = case_when(mashr_Breast_Mammary_Tissue_beta >0 ~ "+",
                                                          mashr_Breast_Mammary_Tissue_beta <0 ~ "-"),
             mashr_Adipose_Subcutaneous_beta = case_when(mashr_Adipose_Subcutaneous_beta >0 ~ "+",
                                                         mashr_Adipose_Subcutaneous_beta <0 ~ "-")) %>% 
      mutate("BCAC Breast" = paste0("(",mashr_Breast_Mammary_Tissue_beta,") ", mashr_Breast_Mammary_Tissue_p),
             "BCAC Sub.Fat" = paste0("(",mashr_Adipose_Subcutaneous_beta,") ", mashr_Adipose_Subcutaneous_p)) %>% 
      mutate(`BCAC Breast` = ifelse(`BCAC Breast` == "(NA) NA", NA, `BCAC Breast`)) %>% 
      mutate(`BCAC Sub.Fat` = ifelse(`BCAC Sub.Fat` == "(NA) NA", NA, `BCAC Sub.Fat`)) %>% 
      select(gene_name, `BCAC Breast`, `BCAC Sub.Fat`)
    intersect(gene_p_mixcan_BH_0.1, gene_p_PrediXcan_BH_0.1) %>% length()
    result_MiXcan_PrediXcan_combined_overlap %>% 
      left_join(bcac_spredixcan_results %>% 
                  filter(gene_name %in% intersect(gene_p_mixcan_BH_0.1, gene_p_PrediXcan_BH_0.1))) %>% 
      write_tsv("Paper_PrediXcan/Results/gene_p_mixcan_PrediXcan_BH_0.1_overlap_0515.tsv")
    setdiff(gene_p_mixcan_BH_0.1, gene_p_PrediXcan_BH_0.1) %>% length
    result_MiXcan_PrediXcan_combined_setdiff_mixcan_PrediXcan %>% 
      left_join(bcac_spredixcan_results %>% 
                  filter(gene_name %in% setdiff(gene_p_mixcan_BH_0.1, gene_p_PrediXcan_BH_0.1))) %>% 
      write_tsv("Paper_PrediXcan/Results/gene_p_mixcan_PrediXcan_BH_0.1_setdiff_mixcan_PrediXcan_0515.tsv")
    
    setdiff(gene_p_PrediXcan_BH_0.1, gene_p_mixcan_BH_0.1) %>% length()
    result_MiXcan_PrediXcan_combined_setdiff_PrediXcan_mixcan %>% 
      left_join(bcac_spredixcan_results %>% 
                  filter(gene_name %in% setdiff(gene_p_PrediXcan_BH_0.1, gene_p_mixcan_BH_0.1))) %>% 
      write_tsv("Paper_PrediXcan/Results/gene_p_mixcan_PrediXcan_BH_0.1_setdiff_PrediXcan_mixcan_0515.tsv")
    
    
    
    gene_p_PrediXcan_FWER_0.05
    gene_p_predictDB_FWER_0.05
    gene_p_mixcan_FWER_0.05
    
    # (p_epi_nonepi <- read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>%
    #   # filter(gene_name == "TMEM245") %>%View
    #   select(gene_name, MiXcan_Epithelial_p.value, MiXcan_non_Epithelial_p.value) %>%
    #   mutate(
    #     MiXcan_Epithelial_p.value_transformed = -log10(MiXcan_Epithelial_p.value),
    #     MiXcan_non_Epithelial_p.value_transformed = -log10(MiXcan_non_Epithelial_p.value)
    #   ) %>%
    #   mutate(
    #     MiXcan_Epithelial_p.value_transformed = ifelse(
    #       is.na(MiXcan_Epithelial_p.value_transformed),
    #       0,
    #       MiXcan_Epithelial_p.value_transformed
    #     ),
    #     MiXcan_non_Epithelial_p.value_transformed = ifelse(
    #       is.na(MiXcan_non_Epithelial_p.value_transformed),
    #       0,
    #       MiXcan_non_Epithelial_p.value_transformed
    #     )
    #   ) %>% 
    #   # mutate(label = case_when(MiXcan_Epithelial_p.value_transformed > 5.05 | MiXcan_non_Epithelial_p.value_transformed > 5.05 ~ gene_name,
    #   #                          TRUE ~ NA_character_)) %>% 
    #   # mutate(group = case_when(MiXcan_Epithelial_p.value_transformed > 5.05 & MiXcan_non_Epithelial_p.value_transformed > 5.05 ~ "MiXcan (epithelial) & MiXcan (non-epithelial)",
    #   #                          MiXcan_Epithelial_p.value_transformed > 5.05 ~ "MiXcan (epithelial)",
    #   #                          MiXcan_non_Epithelial_p.value_transformed > 5.05 ~ "MiXcan (non-epithelial)",
    #   #                          TRUE ~ "None")) %>%
    #   mutate(label = case_when(gene_name %in% c(gene_p_mixcan_BY_0.1) ~ gene_name,
    #                            TRUE ~ NA_character_)) %>%
    #   # count(group)
    #   ggplot(aes(x = MiXcan_Epithelial_p.value_transformed, y = MiXcan_non_Epithelial_p.value_transformed))+
    #   geom_point(size = 0.9)+
    #   # geom_vline(xintercept = 5.05, linetype = "dashed")+
    #   # geom_hline(yintercept = 5.05, linetype = "dashed")+
    #   geom_abline(slope = 1, intercept = 0,linetype = "dashed")+
    #   scale_x_continuous(limits = c(0,15), breaks = c(0,5,10))+
    #   ggrepel::geom_text_repel(aes(label = label), size = 6, show.legend = FALSE)+
    #   # geom_text(aes(label = label), size = 6)+
    #   labs( x = expression(paste(-log[10],"(p-MiXcan-Epithelial)")),y = expression(paste(-log[10],"(p-MiXcan-non-Epithelial)")), color = "")+
    #   # scale_color_manual(values = c(cols,"black")) +
    #   theme_bw()+
    #   theme(axis.title=element_text(size=23),
    #         plot.title = element_text(size = 23),
    #         axis.text = element_text(size = 23),
    #         legend.text = element_text(size = 14),
    #         legend.position = "top"))
    # guides(color=guide_legend(nrow=2,byrow=TRUE,override.aes = list(size = 3)))
    
    # ggsave("Paper_PrediXcan/Plot/p_MiXcan_epi_non_epi.png", height = 8, width = 8)
    # p_combined <- cowplot::plot_grid(p_PredictDB_MiXcan, p_epi_nonepi, ncol = 2)
    
    # ggsave(p_combined, file = "Paper_PrediXcan/Plot/figure5_combined.png", height = 8, width = 16)
    
    
    gene_tissue_BH_0.1 <- yhat_all_tibble_long_regression_tidy_result_all  %>% 
      mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
             p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      select(gene_index, p.value_tissue_BH, p.value_tissue_bonferroni) %>% 
      # filter_all(any_vars(. < 0.1)) %>% 
      filter(p.value_tissue_BH < 0.1) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      pull(gene_name)
    
    gene_en_BH_0.1 <- yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
      mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
             p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
      select(gene_index, p.value_tissue_BH, p.value_tissue_bonferroni) %>% 
      # filter_all(any_vars(. < 0.1)) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      filter(p.value_tissue_BH < 0.1) %>% 
      pull(gene_name)
    
    gene_sym_BH_0.1 <- p_final %>% 
      mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
             p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
             p_tissue_BH = p.adjust(p_tissue, method = "BH"),
             p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
             p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
             p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
      ) %>% 
      select(-p_cell_1, -p_cell_2, -p_tissue) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      # filter(gene_name %in% c("FTCD", "PWP2")) %>% View
      # filter_all(any_vars(. < 0.1))
      filter(p_tissue_BH < 0.1) %>% 
      pull(gene_name)  
    
    gene_tissue_BH_0.1
    gene_en_BH_0.1
    gene_sym_BH_0.1 # venn diagram 3 circles
    
    VennDiagram::venn.diagram(
      list(
        "tissue" = gene_tissue_BH_0.1,
        "en" = gene_en_BH_0.1,
        "sym" = gene_sym_BH_0.1
      ),
      filename = "/Users/jiayi/Downloads/venn_BH_0.1.png",
      col = c("red", "purple","#9c9c00"),
      cex = 1,
      # width = 3000,
      cat.cex = 1,
      # cat.pos = c(1,1,1,1,50)
      # resolution = 300
    )
    
    tibble(Gene_ID = gene_tissue_BH_0.1, PredictDB = 1) %>%
      full_join(tibble(Gene_ID = gene_en_BH_0.1, EN = 1)) %>%
      full_join(tibble(Gene_ID = gene_sym_BH_0.1, Sym = 1)) %>%
      mutate_all(funs(replace(., is.na(.), 0))) %>%
      # filter(PredictDB  ==1,  EN==1,   Sym==1)
      write_tsv("Paper_PrediXcan/Results/gene_tissue_BH_0.1.tsv")
    
                
    
    gene_sym_cell_1_bonferroni_0.05 <- p_final %>% 
      mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
             p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
             p_tissue_BH = p.adjust(p_tissue, method = "BH"),
             p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
             p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
             p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
      ) %>% 
      select(-p_cell_1, -p_cell_2, -p_tissue) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      filter(p_cell_1_bonferroni < 0.05) %>% 
      pull(gene_name)
    
    gene_sym_cell_1_BH_0.1 <- p_final %>% 
      mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
             p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
             p_tissue_BH = p.adjust(p_tissue, method = "BH"),
             p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
             p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
             p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
      ) %>% 
      select(-p_cell_1, -p_cell_2, -p_tissue) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      filter(p_cell_1_BH < 0.1) %>% 
      pull(gene_name)
    
    gene_sym_cell_2_bonferroni_0.05 <- p_final %>% 
      mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
             p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
             p_tissue_BH = p.adjust(p_tissue, method = "BH"),
             p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
             p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
             p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
      ) %>% 
      select(-p_cell_1, -p_cell_2, -p_tissue) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      filter(p_cell_2_bonferroni < 0.05) %>% 
      pull(gene_name)
    
    gene_sym_cell_2_BH_0.1 <- p_final %>% 
      mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
             p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
             p_tissue_BH = p.adjust(p_tissue, method = "BH"),
             p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
             p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
             p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
      ) %>% 
      select(-p_cell_1, -p_cell_2, -p_tissue) %>% 
      inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
      filter(p_cell_2_BH < 0.1) %>% 
      pull(gene_name)
    gene_sym_bonferroni_0.05
    gene_sym_cell_1_bonferroni_0.05
    gene_sym_cell_2_bonferroni_0.05 # venn diaagram 3 circles
    # venn diaagram 3 circles BH
  intersect(gene_sym_cell_2_bonferroni_0.05, gene_sym_bonferroni_0.05) 
  intersect(gene_sym_cell_1_bonferroni_0.05, gene_sym_bonferroni_0.05) 
  intersect(gene_sym_bonferroni_0.05, intersect(gene_sym_cell_1_bonferroni_0.05, gene_sym_cell_2_bonferroni_0.05))
  setdiff(gene_sym_bonferroni_0.05, union(gene_sym_cell_1_bonferroni_0.05, gene_sym_cell_2_bonferroni_0.05))
  
  setdiff(gene_sym_cell_1_bonferroni_0.05, union(gene_sym_bonferroni_0.05, gene_sym_cell_2_bonferroni_0.05))
  setdiff(gene_sym_cell_2_bonferroni_0.05, union(gene_sym_bonferroni_0.05, gene_sym_cell_1_bonferroni_0.05))
  
  VennDiagram::venn.diagram(
    list(
      "tissue" = gene_sym_bonferroni_0.05,
      "cell 1" = gene_sym_cell_1_bonferroni_0.05,
      "cell 2" = gene_sym_cell_2_bonferroni_0.05
    ),
    filename = "/Users/jiayi/Downloads/venn_sym_0.05.png",
    col = c("red", "purple","#9c9c00"),
    cex = 1,
    # width = 3000,
    cat.cex = 1,
    # cat.pos = c(1,1,1,1,50)
    # resolution = 300
  )
  
  VennDiagram::venn.diagram(
    list(
      "tissue" = gene_sym_BH_0.1,
      "cell 1" = gene_sym_cell_1_BH_0.1,
      "cell 2" = gene_sym_cell_2_BH_0.1
    ),
    filename = "/Users/jiayi/Downloads/venn_sym_BH_0.1.png",
    col = c("red", "purple","#9c9c00"),
    cex = 1,
    # width = 3000,
    cat.cex = 1,
    # cat.pos = c(1,1,1,1,50)
    # resolution = 300
  )

  read_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_0515.tsv") %>% 
    filter(gene_name %in% c(gene_sym_BH_0.1, gene_sym_cell_1_BH_0.1, gene_sym_cell_2_BH_0.1, gene_tissue_BH_0.1, gene_en_BH_0.1, gene_sym_BH_0.1)) %>% 
    write_tsv("Paper_PrediXcan/Results/result_MiXcan_PrediXcan_combined_figure_s3.tsv")
  
  tibble(Gene_ID = gene_sym_BH_0.1, Tissue = 1) %>%
    full_join(tibble(Gene_ID = gene_sym_cell_1_BH_0.1, Epithelial = 1)) %>%
    full_join(tibble(Gene_ID = gene_sym_cell_2_BH_0.1, Nonepithelial = 1)) %>%
    mutate_all(funs(replace(., is.na(.), 0))) %>%
    write_tsv("Paper_PrediXcan/Results/gene_symmetric_BH_0.1.tsv")
  
  
  gene_interaction_cell_1_bonferroni_0.05 <- p_interaction_final %>% 
    mutate(p_cell_1_interaction_BH = p.adjust(p_cell_1_interaction, method = "BH"),
           p_cell_2_interaction_BH = p.adjust(p_cell_2_interaction, method = "BH"),
           p_tissue_interaction_BH = p.adjust(p_tissue_interaction, method = "BH"),
           p_cell_1_interaction_bonferroni = p.adjust(p_cell_1_interaction, method = "bonferroni"),
           p_cell_2_interaction_bonferroni = p.adjust(p_cell_2_interaction, method = "bonferroni"),
           p_tissue_interaction_bonferroni = p.adjust(p_tissue_interaction, method = "bonferroni"),
    ) %>% 
    select(-p_cell_1_interaction, -p_cell_2_interaction, -p_tissue_interaction) %>% 
    filter(p_cell_1_interaction_bonferroni < 0.05) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    pull(gene_name)
  
  intersect(gene_interaction_cell_1_bonferroni_0.05,gene_sym_cell_1_bonferroni_0.05) # highlight the 5 in the previous venn diagram
  
  gene_interaction_cell_2_bonferroni_0.05 <- p_interaction_cell_2_final %>% 
    mutate(p_cell_1_interaction_cell_2_BH = p.adjust(p_cell_1_interaction_cell_2, method = "BH"),
           p_cell_2_interaction_cell_2_BH = p.adjust(p_cell_2_interaction_cell_2, method = "BH"),
           p_tissue_interaction_cell_2_BH = p.adjust(p_tissue_interaction_cell_2, method = "BH"),
           p_cell_1_interaction_cell_2_bonferroni = p.adjust(p_cell_1_interaction_cell_2, method = "bonferroni"),
           p_cell_2_interaction_cell_2_bonferroni = p.adjust(p_cell_2_interaction_cell_2, method = "bonferroni"),
           p_tissue_interaction_cell_2_bonferroni = p.adjust(p_tissue_interaction_cell_2, method = "bonferroni"),
    ) %>% 
    select(-p_cell_1_interaction_cell_2, -p_cell_2_interaction_cell_2, -p_tissue_interaction_cell_2) %>% 
    filter(p_cell_2_interaction_cell_2_bonferroni < 0.05) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    pull(gene_name)
  
  intersect(gene_interaction_cell_2_bonferroni_0.05,gene_sym_cell_2_bonferroni_0.05)
  
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
    mutate(term = "en_value") %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
           p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    filter(p.value_tissue_bonferroni < 0.05) %>% 
    write_tsv("Paper_PrediXcan/Results/result_en_bonferroni_0.05.tsv")
  
  p_final %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    filter(gene_name == "TMEM245")
  
  yhat_all_cell_1_tibble_long_regression_tidy_result_all %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    filter(gene_name == "TMEM245")
  
  yhat_all_cell_2_tibble_long_regression_tidy_result_all%>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) 
  
  
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
    mutate(term = "en_value") %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    mutate(p.value_en_BH = p.adjust(p.value, method = "BH"),
           p.value_en_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    filter(p.value_en_bonferroni < 0.05) %>% 
    write_tsv("Paper_PrediXcan/Results/result_en_bonferroni_0.05.tsv")
  
  yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
    mutate(term = "en_value") %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    mutate(p.value_en_BH = p.adjust(p.value, method = "BH"),
           p.value_en_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    filter(gene_name == "SLC4A7")
  
  
  yhat_all_tibble_long_regression_tidy_result_all  %>% 
    mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
           p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    filter(p.value_tissue_bonferroni < 0.05) %>% 
    write_tsv("Paper_PrediXcan/Results/result_predictdb_bonferroni_0.05.tsv")
  
  yhat_all_tibble_long_regression_tidy_result_all  %>% 
    mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
           p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    filter(p.value_tissue_bonferroni < 0.05)  %>% 
    filter(gene_name == "SLC4A7")
  
  yhat_all_cell_1_tibble_long_regression_tidy_result_all %>% 
    select(gene_index, p_cell_1 = p.value, estimate_cell_1 = estimate, p_std_cell_1 = std.error , statistic_cell_1 = statistic) %>% 
    full_join(yhat_all_cell_2_tibble_long_regression_tidy_result_all %>% 
                select(gene_index, p_cell_2 = p.value, estimate_cell_2 = estimate, p_std_cell_2 = std.error , statistic_cell_2= statistic)) %>% 
    inner_join(p_final %>% 
                 mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
                        p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
                        p_tissue_BH = p.adjust(p_tissue, method = "BH"),
                        p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
                        p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
                        p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
                 )) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    write_tsv("Paper_PrediXcan/Results/result_tissue_sym_all.tsv")
  
  yhat_all_cell_1_tibble_long_regression_tidy_result_all %>% 
    select(gene_index, p_cell_1 = p.value, estimate_cell_1 = estimate, p_std_cell_1 = std.error , statistic_cell_1 = statistic) %>% 
    full_join(yhat_all_cell_2_tibble_long_regression_tidy_result_all %>% 
                select(gene_index, p_cell_2 = p.value, estimate_cell_2 = estimate, p_std_cell_2 = std.error , statistic_cell_2= statistic)) %>% 
    inner_join(p_final %>% 
                 mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
                        p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
                        p_tissue_BH = p.adjust(p_tissue, method = "BH"),
                        p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
                        p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
                        p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
                 )) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    filter(gene_name == "SLC4A7") %>% View
  
  # p_final %>% 
  #   mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
  #          p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
  #          p_tissue_BH = p.adjust(p_tissue, method = "BH"),
  #          p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
  #          p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
  #          p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
  #   ) %>% 
  #   inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
  #   write_tsv("Paper_PrediXcan/Results/result_tissue_sym_all.tsv")
  
  p_final %>% 
    mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
           p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
           p_tissue_BH = p.adjust(p_tissue, method = "BH"),
           p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
           p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
           p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
    ) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    # filter(p_tissue_bonferroni < 0.05)%>% 
    filter(gene_name %in% c(gene_interaction_cell_1_BH_0.1, gene_interaction_cell_2_BH_0.1,gene_sym_BH_0.1)) %>% 
    write_tsv("Paper_PrediXcan/Results/result_tissue_sym_bonferroni_0.05.tsv")
  
  p_final %>% 
    mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
           p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
           p_tissue_BH = p.adjust(p_tissue, method = "BH"),
           p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
           p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
           p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
    ) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    # filter(p_cell_1_bonferroni < 0.05)%>% 
    filter(gene_name %in% c(gene_interaction_cell_1_BH_0.1, gene_interaction_cell_2_BH_0.1,gene_sym_BH_0.1)) %>% 
    write_tsv("Paper_PrediXcan/Results/result_cell_1_sym_bonferroni_0.05.tsv")
  
  p_final %>% 
    mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
           p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
           p_tissue_BH = p.adjust(p_tissue, method = "BH"),
           p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
           p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
           p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
    ) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    # filter(p_cell_2_bonferroni < 0.05)%>% 
    filter(gene_name %in% c(gene_interaction_cell_1_BH_0.1, gene_interaction_cell_2_BH_0.1,gene_sym_BH_0.1)) %>% 
    write_tsv("Paper_PrediXcan/Results/result_cell_2_sym_bonferroni_0.05.tsv")
  
  readxl::read_xlsx("Paper_PrediXcan/Literature/48genes_BC_TWAS_Nature2018.xlsx") %>% 
    pull(gene)
  
  read_tsv("Paper_PrediXcan/Results/gene_symmetric_BH_0.1.tsv") %>% 
    pull(Gene_ID)
  
  intersect(readxl::read_xlsx("Paper_PrediXcan/Literature/48genes_BC_TWAS_Nature2018.xlsx") %>% 
              pull(gene), 
            read_tsv("Paper_PrediXcan/Results/gene_symmetric_BH_0.1.tsv") %>% 
              pull(Gene_ID))
  
  read_tsv("Paper_PrediXcan/Results/gene_symmetric_BH_0.1.tsv") %>% 
    filter(Gene_ID %in% c("L3MBTL3", "STXBP4" ))
  
  intersect(readxl::read_xlsx("Paper_PrediXcan/Literature/48genes_BC_TWAS_Nature2018.xlsx") %>% 
              pull(gene), 
            read_tsv("Paper_PrediXcan/Results/gene_tissue_BH_0.1.tsv") %>% 
              pull(Gene_ID)) %>% length
  read_tsv("Paper_PrediXcan/Results/gene_tissue_BH_0.1.tsv") %>% 
    filter(Gene_ID == "STXBP4")
  
  gene_interaction_cell_1_BH_0.1 <- p_interaction_final %>% 
    mutate(p_cell_1_interaction_BH = p.adjust(p_cell_1_interaction, method = "BH"),
           p_cell_2_interaction_BH = p.adjust(p_cell_2_interaction, method = "BH"),
           p_tissue_interaction_BH = p.adjust(p_tissue_interaction, method = "BH"),
           p_cell_1_interaction_bonferroni = p.adjust(p_cell_1_interaction, method = "bonferroni"),
           p_cell_2_interaction_bonferroni = p.adjust(p_cell_2_interaction, method = "bonferroni"),
           p_tissue_interaction_bonferroni = p.adjust(p_tissue_interaction, method = "bonferroni"),
    ) %>% 
    select(-p_cell_1_interaction, -p_cell_2_interaction, -p_tissue_interaction) %>% 
    filter(p_cell_1_interaction_BH < 0.1) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    pull(gene_name)
  
  gene_interaction_cell_2_BH_0.1 <- p_interaction_cell_2_final %>% 
    mutate(p_cell_1_interaction_cell_2_BH = p.adjust(p_cell_1_interaction_cell_2, method = "BH"),
           p_cell_2_interaction_cell_2_BH = p.adjust(p_cell_2_interaction_cell_2, method = "BH"),
           p_tissue_interaction_cell_2_BH = p.adjust(p_tissue_interaction_cell_2, method = "BH"),
           p_cell_1_interaction_cell_2_bonferroni = p.adjust(p_cell_1_interaction_cell_2, method = "bonferroni"),
           p_cell_2_interaction_cell_2_bonferroni = p.adjust(p_cell_2_interaction_cell_2, method = "bonferroni"),
           p_tissue_interaction_cell_2_bonferroni = p.adjust(p_tissue_interaction_cell_2, method = "bonferroni"),
    ) %>% 
    select(-p_cell_1_interaction_cell_2, -p_cell_2_interaction_cell_2, -p_tissue_interaction_cell_2) %>% 
    filter(p_cell_2_interaction_cell_2_BH < 0.1) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    pull(gene_name)
  
  
  intersect(read_tsv("Paper_PrediXcan/Results/gene_symmetric_BH_0.1.tsv") %>% pull(Gene_ID), c(gene_interaction_cell_1_BH_0.1, gene_interaction_cell_2_BH_0.1))
  
  
  p_tissue <- yhat_all_tibble_long_regression_tidy_result_all  %>% 
    mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
           p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    # filter_all(any_vars(. < 0.1)) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    pull(p.value)
  
  p_en <- yhat_all_cell_1_en_tibble_long_regression_tidy_result_all %>% 
    mutate(p.value_tissue_BH = p.adjust(p.value, method = "BH"),
           p.value_tissue_bonferroni = p.adjust(p.value, method = "bonferroni")) %>% 
    
    # filter_all(any_vars(. < 0.1)) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    pull(p.value)
  
  p_sym <- p_final %>% 
    mutate(p_cell_1_BH = p.adjust(p_cell_1, method = "BH"),
           p_cell_2_BH = p.adjust(p_cell_2, method = "BH"),
           p_tissue_BH = p.adjust(p_tissue, method = "BH"),
           p_cell_1_bonferroni = p.adjust(p_cell_1, method = "bonferroni"),
           p_cell_2_bonferroni = p.adjust(p_cell_2, method = "bonferroni"),
           p_tissue_bonferroni = p.adjust(p_tissue, method = "bonferroni"),
    ) %>% 
    # select(-p_cell_1, -p_cell_2, -p_tissue) %>% 
    inner_join(gene_name_table %>% select(gene_index, gene_name)) %>% 
    pull(p_tissue)
  set.seed(111)
  rchisq_1000 <- rchisq(1000,1)
  chisq_sym <- qchisq(1-p_sym,1)
  chisq_en <- qchisq(1-p_en,1)
  chisq_tissue <- qchisq(1-p_tissue,1)
  
  lambda_sym <- median(chisq_sym)/qchisq(0.5,1)
  lambda_en <- median(chisq_en)/qchisq(0.5,1)
  lambda_tissue <- median(chisq_tissue)/qchisq(0.5,1)
  
  oncoarray_clinical <- read_csv("Paper_PrediXcan/Data/OncoArray/oncoarray-drive.pheno.csv")
  
  oncoarray_clinical$affection_status %>% table
  1 + (lambda_sym - 1) * (1 / 27576 + 1 / 32439) * 500
  1 + (lambda_en - 1) * (1 / 27576 + 1 / 32439) * 500
  1 + (lambda_tissue - 1) * (1 / 27576 + 1 / 32439) * 500
  
  set.seed(111)
  ggplot(tibble(chisq = sort(chisq_sym),
                expected = sort(rchisq(6081, df = 1))), aes(y = chisq, x = expected))+
    geom_point()+
    geom_abline(slope = 1)+
    theme_bw()+
    geom_hline(yintercept = 0.577, color = "red", linetype = "dashed")+
    coord_equal()+
    scale_x_continuous(limits = c(0,60))+
    labs(x = "Expected chi-squared value",
         y = "Observed chi-squared value")
  
  ggsave("Paper_PrediXcan/Plot/chisq_sym.png", height = 5, width = 5)
  
  set.seed(111)
  ggplot(tibble(chisq = sort(chisq_en),
                expected = sort(rchisq(5923, df = 1))), aes(y = chisq, x = expected))+
    geom_point()+
    geom_abline(slope = 1)+
    theme_bw()+
    geom_hline(yintercept = median(chisq_en), color = "red", linetype = "dashed")+
    coord_equal()+
    scale_y_continuous(limits = c(0,40))+
    scale_x_continuous(limits = c(0,40))+
    labs(x = "Expected chi-squared value",
         y = "Observed chi-squared value")
  
  ggsave("Paper_PrediXcan/Plot/chisq_en.png", height = 5, width = 5)
  
  set.seed(111)
  ggplot(tibble(chisq = sort(chisq_tissue),
                expected = sort(rchisq(6452, df = 1))), aes(y = chisq, x = expected))+
    geom_point()+
    geom_abline(slope = 1)+
    theme_bw()+
    geom_hline(yintercept = median(chisq_tissue), color = "red", linetype = "dashed")+
    coord_equal()+
    scale_y_continuous(limits = c(0,40))+
    scale_x_continuous(limits = c(0,40))+
    labs(x = "Expected chi-squared value",
         y = "Observed chi-squared value")
  
  ggsave("Paper_PrediXcan/Plot/chisq_tissue.png", height = 5, width = 5)
  