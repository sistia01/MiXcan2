MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
# MiXcan2 Ensemble -------
ensemble=MiXcan2_ensemble(y=y, x=x, cov=cov, pi=pi,
yName="Gene1", B=10, seed=355)
ensemble$ensemble_summary_by_type
ensemble$ensemble_summary
ensemble$ensemble_summary_by_type
ensemble$ensemble_summary
ensemble$ensemble_summary_by_type
ensemble$ensemble_summary
x=model$x;y=model$y; cov=model$cov;
type=model$type; pi=model$pi; foldid=model$foldid
w <- MiXcan2_extract_weight(model = model, keepZeroWeight = T)
summary <- MiXcan2_extract_summary(model = model)
# NoPredictor - no performance
if (type=="NoPredictor") {cv.r2.refit=in.sample.r2.refit=0}
snpidx=Matrix::which(w$weight_cell_1 !=0 | w$weight_cell_2!=0)
pr=length(snpidx)
xreduced=as.matrix(x[, snpidx])
xr_cov=cbind(xreduced, cov)
ft=glmnet::glmnet(x=xr_cov, y=y, family = "gaussian",
alpha=0, lambda = 1e-3)
beta=ft$beta[1:pr]
# weight
w$weight_cell_1[w$weight_cell_1!=0]=
w$weight_cell_2[w$weight_cell_2!=0]=as.numeric(beta)
# in sample c2
yhat=xreduced%*%beta
in.sample.r2.refit=1-sum( (y-y_hat)^2)/sum(y^2)
dim(yhat)
dim(y)
(y-y_hat)
y
y_hat
dim(xreduced)
dim(beta)
beta
yhat=xreduced%*%beta
y-y_hat
yhat
class(y)
class(y_hat)
y-y_hat
dim(y)
in.sample.r2.refit=1-sum( (y-yhat)^2)/sum(y^2)
in.sample.r2.refit
y_hat=xreduced%*%beta
in.sample.r2.refit=1-sum( (y-y_hat)^2)/sum(y^2)
# cv r2
all_r2=NULL
for (i in 1:10) {
temp=glmnet::glmnet(x=xr_cov[foldid!=i,], y=y[foldid!=i],
family="gaussian",
lambda = 1e-3, alpha=0)
y_hat=as.matrix(xreduced[foldid==i,]) %*% temp$beta[1:pr]
r2_temp=1-sum( (y[foldid==i]-y_hat)^2)/sum(y[foldid==i]^2)
all_r2=c(all_r2, r2_temp)
}
all_r2[is.na(all_r2)]=0
cv.r2.refit=mean(all_r2)
cv.r2.refit
in.sample.r2.refit
all_r2=NULL
for (i in 1:10) {
temp=glmnet::glmnet(x=xxreduced[foldid!=i,], y=y[foldid!=i],
family="gaussian",
lambda = 1e-3, alpha=0)
test=c(temp$a0,as.numeric(temp$beta))
tbeta10=test[1]+test[2]/2
tbeta20=test[1]-test[2]/2
tbeta11=test[3: (pr+2)] + test[(pr+3): (2*pr+2)]/2
tbeta21=test[3: (pr+2)] - test[(pr+3): (2*pr+2)]/2
tbeta1=c(tbeta10, tbeta11)
tbeta2=c(tbeta20, tbeta21)
tdesign=cbind(1, xreduced[foldid==i,] )
y_hat= pi[foldid==i] * tdesign %*% tbeta1 +
(1-pi[foldid==i]) * tdesign %*% tbeta2
r2_temp=1-sum( (y[foldid==i]-y_hat)^2)/sum(y[foldid==i]^2)
all_r2=c(all_r2, r2_temp)
}
ci=pi-0.5; zreduced=ci*xreduced;
xxreduced=as.matrix(cbind(ci, xreduced, zreduced))
temp=glmnet::glmnet(x=xxreduced, y=y, family =
"gaussian", alpha=0, lambda = 0.001)
test=c(temp$a0,as.numeric(temp$beta))
tbeta10=test[1]+test[2]/2
tbeta20=test[1]-test[2]/2
tbeta11=test[3: (pr+2)] + test[(pr+3): (2*pr+2)]/2
tbeta21=test[3: (pr+2)] - test[(pr+3): (2*pr+2)]/2
tbeta1=c(tbeta10, tbeta11)
tbeta2=c(tbeta20, tbeta21)
# weight
w$weight_cell_1[w$weight_cell_1!=0]=tbeta11
w$weight_cell_2[w$weight_cell_2!=0]=tbeta21
# in sample r2
y_hat=pi* cbind(1, xreduced) %*% tbeta1 +
(1-pi)* cbind(1, xreduced) %*% tbeta2
in.sample.r2.refit=1-sum( (y-y_hat)^2)/sum(y^2)
in.sample.r2.refit
all_r2=NULL
for (i in 1:10) {
temp=glmnet::glmnet(x=xxreduced[foldid!=i,], y=y[foldid!=i],
family="gaussian",
lambda = 1e-3, alpha=0)
test=c(temp$a0,as.numeric(temp$beta))
tbeta10=test[1]+test[2]/2
tbeta20=test[1]-test[2]/2
tbeta11=test[3: (pr+2)] + test[(pr+3): (2*pr+2)]/2
tbeta21=test[3: (pr+2)] - test[(pr+3): (2*pr+2)]/2
tbeta1=c(tbeta10, tbeta11)
tbeta2=c(tbeta20, tbeta21)
tdesign=cbind(1, xreduced[foldid==i,] )
y_hat= pi[foldid==i] * tdesign %*% tbeta1 +
(1-pi[foldid==i]) * tdesign %*% tbeta2
r2_temp=1-sum( (y[foldid==i]-y_hat)^2)/sum(y[foldid==i]^2)
all_r2=c(all_r2, r2_temp)
}
all_r2[is.na(all_r2)]=0
cv.r2.refit=mean(all_r2)
}
# cv r2
all_r2=NULL
for (i in 1:10) {
temp=glmnet::glmnet(x=xxreduced[foldid!=i,], y=y[foldid!=i],
family="gaussian",
lambda = 1e-3, alpha=0)
test=c(temp$a0,as.numeric(temp$beta))
tbeta10=test[1]+test[2]/2
tbeta20=test[1]-test[2]/2
tbeta11=test[3: (pr+2)] + test[(pr+3): (2*pr+2)]/2
tbeta21=test[3: (pr+2)] - test[(pr+3): (2*pr+2)]/2
tbeta1=c(tbeta10, tbeta11)
tbeta2=c(tbeta20, tbeta21)
tdesign=cbind(1, xreduced[foldid==i,] )
y_hat= pi[foldid==i] * tdesign %*% tbeta1 +
(1-pi[foldid==i]) * tdesign %*% tbeta2
r2_temp=1-sum( (y[foldid==i]-y_hat)^2)/sum(y[foldid==i]^2)
all_r2=c(all_r2, r2_temp)
}
all_r2[is.na(all_r2)]=0
cv.r2.refit=mean(all_r2)
all_r2
cv.r2.refit
if (keepZeroWeight==F) {
w = w %>%
dplyr::filter(!(weight_cell_1 == 0 & weight_cell_2 == 0))
}
keepZeroWeight=F
if (keepZeroWeight==F) {
w = w %>%
dplyr::filter(!(weight_cell_1 == 0 & weight_cell_2 == 0))
}
summary2= summary %>% data.frame()  %>%
mutate(in_sample_r2_refit =in.sample.r2.refit)%>%
mutate(cv_r2_refit =cv.r2.refit)
summary2
library(MiXcan2)
# MiXcan2  -------
set.seed(222)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
# MiXcan2 Ensemble -------
ensemble=MiXcan2_ensemble(y=y, x=x, cov=cov, pi=pi,
yName="Gene1", B=10, seed=355)
ensemble$ensemble_summary_by_type
ensemble$ensemble_summary
ensemble$ensemble_summary_by_type
ensemble=MiXcan2_ensemble(y=y, x=x, cov=cov, pi=pi,
yName="Gene1", B=10, seed=123)
ensemble$ensemble_summary_by_type
library(MiXcan2)
devtools::document()
library(MiXcan2)
library(MiXcan2)
data(example_data)
set.seed(123)
pi_estimation_result <- pi_estimation(expression_matrix = GTEx_epithelial_genes,
prior = GTEx_prior, n_iteration = 5)
rm(list=ls())
library(MiXcan2)
library(doParallel)
library(tidyverse)
nCores=detectCores()-1; registerDoParallel(nCores) # use parallel computing for speed,
# make up a dataset------
# set.seed(123)
# n=200
# pi=rbeta(n, 2, 3)
# x=matrix(rbinom(n*10, 2, 0.3), ncol=10)
# y=x[,1]*pi+rnorm(n, sd=0.2)
# cov=NULL
#
# var(2*x[,1]*pi)/var(y) # real 2
#
# a=lm(y~x[,1]+pi+x[,1]*pi)
# var(predict(a))/var(y) # r2
# a=lm(y~x[,1])
# var(predict(a))/var(y) # r2
# a=lm(y~pi)
# var(predict(a))/var(y) # r2
#
# library(MiXcan)
data(example_data)
set.seed(123)
pi_estimation_result <- pi_estimation(expression_matrix = GTEx_epithelial_genes,
prior = GTEx_prior, n_iteration = 5)
pi=pi_estimation_result$mean_trim_0.05
x=x_example
y=y_example
cov=cov_example
set.seed(222)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
set.seed(123)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
# MiXcan2 Ensemble -------
ensemble=MiXcan2_ensemble(y=y, x=x, cov=cov, pi=pi,
yName="Gene1", B=10, seed=123)
ensemble
ensemble$ensemble_summary_by_type
ensemble$ensemble_summary
set.seed(1234)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
set.seed(134)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
seed=111
set.seed(seed)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
seed=32
set.seed(seed)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
seed=42
set.seed(seed)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
seed=99
set.seed(seed)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
seed=546
set.seed(seed)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
seed=987
set.seed(seed)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
seed=753
set.seed(seed)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
seed=846
set.seed(seed)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
seed=15
set.seed(seed)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
n=200
x=rbinom(n, 2, 0.3)
pi=rbeta(n, 2,3)
y=pi*(1+x)+rnorm(n)
cov=NULL
# MiXcan2  -------
set.seed(123)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
n=200
x=matrix(rbinom(n*2, 2, 0.3),ncol=2)
pi=rbeta(n, 2,3)
y=pi*(1+x[,1])+rnorm(n)
cov=NULL
# MiXcan2  -------
set.seed(123)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
n=200
x=matrix(rbinom(n*2, 2, 0.3),ncol=2)
pi=rbeta(n, 2,3)
y=pi*(1+5*x[,1])+rnorm(n)
cov=NULL
# MiXcan2  -------
set.seed(123)
foldid <- sample(1:10, length(y), replace=T)
model <- MiXcan2_model(y=y, x=x, cov = cov,
pi= pi,
foldid = foldid, yName="Gene1",
xNameMatrix = paste0("X", 1:ncol(x)))
model$beta.SNP.cell1
model$beta.SNP.cell2
# Extract Info
MiXcan_weight_result <- MiXcan2_extract_weight(model = model)
MiXcan_weight_result
MiXcan_summary_result <- MiXcan2_extract_summary(model=model)
MiXcan_summary_result
# Refit
MiXcan_refit <- MiXcan2_refit(model = model)
MiXcan_refit$weight
MiXcan_refit$summary
# MiXcan2 Ensemble -------
ensemble=MiXcan2_ensemble(y=y, x=x, cov=cov, pi=pi,
yName="Gene1", B=10, seed=123)
ensemble$ensemble_summary_by_type
ensemble$ensemble_summary
ensemble$ensemble_weight
ensemble$all_weights
ensemble$ensemble_weight
